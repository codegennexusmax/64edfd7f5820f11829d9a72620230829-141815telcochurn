[{"_id": "64edfd7f5820f11829d9a729", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1693318524.csv", "in": [], "out": ["64edfd7f5820f11829d9a72a"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Telco_churn_HDFS", "comment": "", "pipeline_id": "64edfd7f5820f11829d9a726", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/extra/tempFile1693318524.csv", "filename": "tempFile1693318524.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "source", "text": "HDFS", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal", "mode": "manual"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"url": "", "file_type": "", "dbfs_token": "", "dbfs_domain": "", "delimiter": "", "is_header": "Use Header Line"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]", "alias": "Telco_Customer_Churn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]", "alias": "Telco_Customer_Churn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]", "alias": "Telco_Customer_Churn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]", "alias": "Telco_Customer_Churn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]", "alias": "Telco_Customer_Churn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]", "alias": "Telco_Customer_Churn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]", "alias": "Telco_Customer_Churn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]", "alias": "Telco_Customer_Churn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]", "alias": "Telco_Customer_Churn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]", "alias": "Telco_Customer_Churn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]", "alias": "Telco_Customer_Churn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]", "alias": "Telco_Customer_Churn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]", "alias": "Telco_Customer_Churn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]", "alias": "Telco_Customer_Churn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]", "alias": "Telco_Customer_Churn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]", "alias": "Telco_Customer_Churn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]", "alias": "Telco_Customer_Churn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]", "alias": "Telco_Customer_Churn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]", "alias": "Telco_Customer_Churn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]", "alias": "Telco_Customer_Churn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]", "alias": "Telco_Customer_Churn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]", "alias": "Telco_Customer_Churn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]", "alias": "Telco_Customer_Churn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]", "alias": "Telco_Customer_Churn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-29 14:15:27.190000", "joinSchema": [], "updated_at": "2023-08-29 14:15:27.292000", "__v": 0, "stage_runningstate": "executed", "datacache": 0, "originalcount": 7043, "sampleData": [{"Telco_Customer_Churn[customerID]": "7206-GZCDC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.25, "Telco_Customer_Churn[TotalCharges]": 69.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8380-PEFPE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.65, "Telco_Customer_Churn[TotalCharges]": 71.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8309-IEYJD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.6, "Telco_Customer_Churn[TotalCharges]": 70.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9488-HGMJH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.15, "Telco_Customer_Churn[TotalCharges]": 71.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0968-GSIKN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.8, "Telco_Customer_Churn[TotalCharges]": 70.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3871-IKPYH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.1, "Telco_Customer_Churn[TotalCharges]": 69.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4603-JANFB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.85, "Telco_Customer_Churn[TotalCharges]": 69.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5376-DEQCP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.6, "Telco_Customer_Churn[TotalCharges]": 70.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3244-DCJWY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.25, "Telco_Customer_Churn[TotalCharges]": 70.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3413-BMNZE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.25, "Telco_Customer_Churn[TotalCharges]": 45.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8705-WZCYL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.8, "Telco_Customer_Churn[TotalCharges]": 44.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6982-SSHFK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.4, "Telco_Customer_Churn[TotalCharges]": 44.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2833-SLKDQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.05, "Telco_Customer_Churn[TotalCharges]": 45.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4237-RLAQD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.85, "Telco_Customer_Churn[TotalCharges]": 45.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1478-VPOAD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 43.8, "Telco_Customer_Churn[TotalCharges]": 43.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9828-AOQLM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.7, "Telco_Customer_Churn[TotalCharges]": 45.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5103-MHMHY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.95, "Telco_Customer_Churn[TotalCharges]": 45.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5692-FPTAH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.4, "Telco_Customer_Churn[TotalCharges]": 45.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7663-RGWBC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.15, "Telco_Customer_Churn[TotalCharges]": 44.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4855-SNKMY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.1, "Telco_Customer_Churn[TotalCharges]": 44.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2082-CEFLT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.6, "Telco_Customer_Churn[TotalCharges]": 45.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4361-JEIVL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.4, "Telco_Customer_Churn[TotalCharges]": 44.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3276-HDUEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.05, "Telco_Customer_Churn[TotalCharges]": 75.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1157-BQCUW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.95, "Telco_Customer_Churn[TotalCharges]": 74.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9787-XVQIU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.3, "Telco_Customer_Churn[TotalCharges]": 75.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0248-IPDFW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.1, "Telco_Customer_Churn[TotalCharges]": 50.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3746-EUBYR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.6, "Telco_Customer_Churn[TotalCharges]": 74.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0023-HGHWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 25.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2862-PFNIK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.7, "Telco_Customer_Churn[TotalCharges]": 24.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4367-NHWMM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.9, "Telco_Customer_Churn[TotalCharges]": 24.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3551-HUAZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.4, "Telco_Customer_Churn[TotalCharges]": 74.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0616-ATFGB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.05, "Telco_Customer_Churn[TotalCharges]": 25.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1740-CSDJP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 35.25, "Telco_Customer_Churn[TotalCharges]": 35.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2004-OCQXK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.95, "Telco_Customer_Churn[TotalCharges]": 81.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9124-LHCJQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 85.45, "Telco_Customer_Churn[TotalCharges]": 85.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4614-NUVZD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.1, "Telco_Customer_Churn[TotalCharges]": 81.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3063-QFSZL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.4, "Telco_Customer_Churn[TotalCharges]": 55.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5909-ECHUI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.25, "Telco_Customer_Churn[TotalCharges]": 56.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7439-DKZTW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 80.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3988-RQIXO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.3, "Telco_Customer_Churn[TotalCharges]": 91.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5378-IKEEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.75, "Telco_Customer_Churn[TotalCharges]": 35.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7577-SWIFR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.25, "Telco_Customer_Churn[TotalCharges]": 89.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9507-EXLTT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 79.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8665-UTDHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.2, "Telco_Customer_Churn[TotalCharges]": 30.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6905-NIQIN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.65, "Telco_Customer_Churn[TotalCharges]": 50.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7595-EUIVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.8, "Telco_Customer_Churn[TotalCharges]": 75.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5054-IEXZT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.35, "Telco_Customer_Churn[TotalCharges]": 75.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5073-WXOYN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.8, "Telco_Customer_Churn[TotalCharges]": 3027.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1636-NTNCO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.95, "Telco_Customer_Churn[TotalCharges]": 207.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3665-JATSN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.7, "Telco_Customer_Churn[TotalCharges]": 710.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5438-QMDDL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.8, "Telco_Customer_Churn[TotalCharges]": 1130.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4130-MZLCC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.55, "Telco_Customer_Churn[TotalCharges]": 244.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8229-MYEJZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.2, "Telco_Customer_Churn[TotalCharges]": 498.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3391-JSQEW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.15, "Telco_Customer_Churn[TotalCharges]": 2058.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6637-KYRCV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.5, "Telco_Customer_Churn[TotalCharges]": 167.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1322-AGOQM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.3, "Telco_Customer_Churn[TotalCharges]": 1380.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7636-OWBPG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.35, "Telco_Customer_Churn[TotalCharges]": 381.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5402-HTOTQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.3, "Telco_Customer_Churn[TotalCharges]": 875.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5816-SCGFC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.3, "Telco_Customer_Churn[TotalCharges]": 419.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1114-CENIM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 3092.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2843-CQMEG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.7, "Telco_Customer_Churn[TotalCharges]": 1218.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7916-VCCPB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.25, "Telco_Customer_Churn[TotalCharges]": 1195.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1215-FIGMP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 89.9, "Telco_Customer_Churn[TotalCharges]": 5450.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1307-TVUFB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 3344.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1323-OOEPC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.4, "Telco_Customer_Churn[TotalCharges]": 5149.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5453-AXEPF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.5, "Telco_Customer_Churn[TotalCharges]": 1336.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8490-BXHEO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 1411.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4686-UXDML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.85, "Telco_Customer_Churn[TotalCharges]": 1992.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3811-VBYBZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 99.8, "Telco_Customer_Churn[TotalCharges]": 673.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6298-QDFNH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 1730.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8182-BJDSI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.95, "Telco_Customer_Churn[TotalCharges]": 2625.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8922-LIEGH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.7, "Telco_Customer_Churn[TotalCharges]": 2187.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3481-JHUZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.25, "Telco_Customer_Churn[TotalCharges]": 3439.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3420-YJLQT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.55, "Telco_Customer_Churn[TotalCharges]": 151.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9600-NAXZN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.4, "Telco_Customer_Churn[TotalCharges]": 4528.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4257-GAESD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 298.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5543-QDCRY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.4, "Telco_Customer_Churn[TotalCharges]": 234.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8160-HOWOX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 66.85, "Telco_Customer_Churn[TotalCharges]": 458.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6429-SHBCB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.6, "Telco_Customer_Churn[TotalCharges]": 1394.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7890-VYYWG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 36.45, "Telco_Customer_Churn[TotalCharges]": 93.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8096-LOIST", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.2, "Telco_Customer_Churn[TotalCharges]": 1093.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1261-FWTTE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 34.65, "Telco_Customer_Churn[TotalCharges]": 768.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2720-FVBQP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 48.95, "Telco_Customer_Churn[TotalCharges]": 273.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8601-QACRS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.6, "Telco_Customer_Churn[TotalCharges]": 249.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0096-BXERS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.35, "Telco_Customer_Churn[TotalCharges]": 314.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1310-QRITU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.3, "Telco_Customer_Churn[TotalCharges]": 913.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6345-HOVES", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.05, "Telco_Customer_Churn[TotalCharges]": 852.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7876-BEUTG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 48.8, "Telco_Customer_Churn[TotalCharges]": 720.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0999-QXNSA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.75, "Telco_Customer_Churn[TotalCharges]": 344.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1125-SNVCK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 43.8, "Telco_Customer_Churn[TotalCharges]": 2106.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3580-REOAC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.85, "Telco_Customer_Churn[TotalCharges]": 435.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2637-FKFSY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 46.1, "Telco_Customer_Churn[TotalCharges]": 130.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4061-UKJWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.45, "Telco_Customer_Churn[TotalCharges]": 141.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5968-VXZLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 46.6, "Telco_Customer_Churn[TotalCharges]": 87.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3470-BTGQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.65, "Telco_Customer_Churn[TotalCharges]": 985.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5651-CPDND", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 492.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0374-IOEGQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.6, "Telco_Customer_Churn[TotalCharges]": 122.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3874-EQOEP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 655.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6551-GNYDG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.9, "Telco_Customer_Churn[TotalCharges]": 1152.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8519-IMDHU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.6, "Telco_Customer_Churn[TotalCharges]": 1345.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5373-SFODM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.25, "Telco_Customer_Churn[TotalCharges]": 3132.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0148-DCDOS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.7, "Telco_Customer_Churn[TotalCharges]": 2362.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6175-IRFIT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 78.75, "Telco_Customer_Churn[TotalCharges]": 426.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5271-DBYSJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.15, "Telco_Customer_Churn[TotalCharges]": 827.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9812-GHVRI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.85, "Telco_Customer_Churn[TotalCharges]": 3532.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3585-ISXZP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.65, "Telco_Customer_Churn[TotalCharges]": 778.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5307-DZCVC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.95, "Telco_Customer_Churn[TotalCharges]": 2628.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8212-CRQXP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 1706.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2656-FMOKZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 74.45, "Telco_Customer_Churn[TotalCharges]": 1145.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5652-MSDEY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.75, "Telco_Customer_Churn[TotalCharges]": 777.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9540-JYROE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.1, "Telco_Customer_Churn[TotalCharges]": 551.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2476-YGEFM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 2215.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3755-JBMNH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.8, "Telco_Customer_Churn[TotalCharges]": 1167.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9943-VSZUV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.7, "Telco_Customer_Churn[TotalCharges]": 5060.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9389-ACWBI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.95, "Telco_Customer_Churn[TotalCharges]": 320.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9850-OWRHQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.1, "Telco_Customer_Churn[TotalCharges]": 228.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4115-NZRKS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.15, "Telco_Customer_Churn[TotalCharges]": 574.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0093-EXYQL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.55, "Telco_Customer_Churn[TotalCharges]": 3673.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6319-IEJWJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.2, "Telco_Customer_Churn[TotalCharges]": 1776.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0187-QSXOE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 605.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9837-BMCLM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.5, "Telco_Customer_Churn[TotalCharges]": 242.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1678-FYZOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.4, "Telco_Customer_Churn[TotalCharges]": 244.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9689-PTNPG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.25, "Telco_Customer_Churn[TotalCharges]": 144.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3191-CSNMG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.7, "Telco_Customer_Churn[TotalCharges]": 239.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9450-TRJUU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.15, "Telco_Customer_Churn[TotalCharges]": 2848.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3158-MOERK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.0, "Telco_Customer_Churn[TotalCharges]": 174.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7024-OHCCK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.85, "Telco_Customer_Churn[TotalCharges]": 170.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9809-IMGCQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.7, "Telco_Customer_Churn[TotalCharges]": 2082.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6198-RTPMF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.6, "Telco_Customer_Churn[TotalCharges]": 1579.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4424-TKOPW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.85, "Telco_Customer_Churn[TotalCharges]": 196.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3990-QYKBE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.5, "Telco_Customer_Churn[TotalCharges]": 3473.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3714-NTNFO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.5, "Telco_Customer_Churn[TotalCharges]": 3906.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2362-IBOOY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.75, "Telco_Customer_Churn[TotalCharges]": 3050.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2642-DTVCO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.05, "Telco_Customer_Churn[TotalCharges]": 746.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3223-WZWJM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.95, "Telco_Customer_Churn[TotalCharges]": 2254.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4846-WHAFZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.5, "Telco_Customer_Churn[TotalCharges]": 2868.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9903-LYSAB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.15, "Telco_Customer_Churn[TotalCharges]": 1305.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0265-EDXBD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 2303.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5956-VKDTT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.35, "Telco_Customer_Churn[TotalCharges]": 334.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5879-SESNB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.25, "Telco_Customer_Churn[TotalCharges]": 888.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4547-LYTDD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.65, "Telco_Customer_Churn[TotalCharges]": 1194.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8443-ZRDBZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.05, "Telco_Customer_Churn[TotalCharges]": 318.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9306-CPCBC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.25, "Telco_Customer_Churn[TotalCharges]": 210.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3519-ZKXGG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.85, "Telco_Customer_Churn[TotalCharges]": 256.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2077-MPJQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.4, "Telco_Customer_Churn[TotalCharges]": 533.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8270-RKSAP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.5, "Telco_Customer_Churn[TotalCharges]": 597.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2884-GBPFB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.3, "Telco_Customer_Churn[TotalCharges]": 2416.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8835-VSDSE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.7, "Telco_Customer_Churn[TotalCharges]": 141.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3884-HCSWG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 1144.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7112-OPOTK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 33, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 68.25, "Telco_Customer_Churn[TotalCharges]": 2171.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5168-MSWXT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.75, "Telco_Customer_Churn[TotalCharges]": 759.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6896-SRVYQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.85, "Telco_Customer_Churn[TotalCharges]": 3122.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4285-GYRQC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.25, "Telco_Customer_Churn[TotalCharges]": 587.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1475-VWVDO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 490.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9747-DDZOS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.5, "Telco_Customer_Churn[TotalCharges]": 73.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4585-HETAI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.75, "Telco_Customer_Churn[TotalCharges]": 325.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3192-LNKRK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 2909.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6996-KNSML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 74.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4879-GZLFH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.15, "Telco_Customer_Churn[TotalCharges]": 3875.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6060-DRTNL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 84.85, "Telco_Customer_Churn[TotalCharges]": 415.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1918-ZBFQJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.25, "Telco_Customer_Churn[TotalCharges]": 1111.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8563-OYMQY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.95, "Telco_Customer_Churn[TotalCharges]": 1612.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4248-HCETZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 79.65, "Telco_Customer_Churn[TotalCharges]": 2365.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2603-HVKCG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.4, "Telco_Customer_Churn[TotalCharges]": 3143.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4465-VDKIQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 77.8, "Telco_Customer_Churn[TotalCharges]": 1358.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9688-YGXVR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.15, "Telco_Customer_Churn[TotalCharges]": 3973.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9526-JAWYF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.8, "Telco_Customer_Churn[TotalCharges]": 2335.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5348-CAGXB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.55, "Telco_Customer_Churn[TotalCharges]": 1021.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5016-IBERQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.25, "Telco_Customer_Churn[TotalCharges]": 1968.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1579-KLYDT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.45, "Telco_Customer_Churn[TotalCharges]": 593.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9885-AIBVB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.8, "Telco_Customer_Churn[TotalCharges]": 2440.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1170-SASML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.4, "Telco_Customer_Churn[TotalCharges]": 5869.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2911-WDXMV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 1406.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4559-UWIHT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 82.65, "Telco_Customer_Churn[TotalCharges]": 1185.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4927-WWOOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.45, "Telco_Customer_Churn[TotalCharges]": 171.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8623-TMRBY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.2, "Telco_Customer_Churn[TotalCharges]": 4146.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6137-NICCO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 94.05, "Telco_Customer_Churn[TotalCharges]": 518.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7547-EKNFS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.25, "Telco_Customer_Churn[TotalCharges]": 3959.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0023-XUOPT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.1, "Telco_Customer_Churn[TotalCharges]": 1215.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1173-XZPYF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.2, "Telco_Customer_Churn[TotalCharges]": 990.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4070-OKWVH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.6, "Telco_Customer_Churn[TotalCharges]": 5025.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1173-NOEYG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.15, "Telco_Customer_Churn[TotalCharges]": 2423.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0504-HHAPI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.3, "Telco_Customer_Churn[TotalCharges]": 2467.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6075-SLNIL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.1, "Telco_Customer_Churn[TotalCharges]": 3691.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0979-PHULV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.45, "Telco_Customer_Churn[TotalCharges]": 7007.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3005-TYFRD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.65, "Telco_Customer_Churn[TotalCharges]": 5676.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9547-ITEFG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 102.6, "Telco_Customer_Churn[TotalCharges]": 897.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0093-XWZFY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 104.5, "Telco_Customer_Churn[TotalCharges]": 4036.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0434-CSFON", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.5, "Telco_Customer_Churn[TotalCharges]": 4707.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3606-TWKGI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 106.9, "Telco_Customer_Churn[TotalCharges]": 1364.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0781-LKXBR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.5, "Telco_Customer_Churn[TotalCharges]": 918.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4822-RVYBB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.6, "Telco_Customer_Churn[TotalCharges]": 819.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6651-AZVTJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 99.8, "Telco_Customer_Churn[TotalCharges]": 4872.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7901-TBKJX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.05, "Telco_Customer_Churn[TotalCharges]": 5594.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4021-RQSNY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.5, "Telco_Customer_Churn[TotalCharges]": 3004.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4433-JCGCG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.0, "Telco_Customer_Churn[TotalCharges]": 4680.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4553-DVPZG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.35, "Telco_Customer_Churn[TotalCharges]": 6164.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5502-RLUYV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.95, "Telco_Customer_Churn[TotalCharges]": 7446.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6116-RFVHN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.45, "Telco_Customer_Churn[TotalCharges]": 3414.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4735-ASGMA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.35, "Telco_Customer_Churn[TotalCharges]": 2515.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2080-CAZNM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 104.4, "Telco_Customer_Churn[TotalCharges]": 4133.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7233-DRTRF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 102.4, "Telco_Customer_Churn[TotalCharges]": 6444.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6646-VRFOL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.85, "Telco_Customer_Churn[TotalCharges]": 5485.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4078-SAYYN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.75, "Telco_Customer_Churn[TotalCharges]": 1129.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2011-TRQYE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 33.5, "Telco_Customer_Churn[TotalCharges]": 600.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4280-DLSHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.75, "Telco_Customer_Churn[TotalCharges]": 445.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1357-MVDOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.65, "Telco_Customer_Churn[TotalCharges]": 683.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8348-HFYIV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.25, "Telco_Customer_Churn[TotalCharges]": 90.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3677-IYRBF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.4, "Telco_Customer_Churn[TotalCharges]": 78.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7410-KTVFV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.55, "Telco_Customer_Churn[TotalCharges]": 878.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7743-EXURX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.05, "Telco_Customer_Churn[TotalCharges]": 415.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7240-ETPTR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 48.75, "Telco_Customer_Churn[TotalCharges]": 442.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8992-JQYUN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.35, "Telco_Customer_Churn[TotalCharges]": 50.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0486-HECZI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.75, "Telco_Customer_Churn[TotalCharges]": 5238.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5299-RULOA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.25, "Telco_Customer_Churn[TotalCharges]": 1064.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5091-HFAZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.15, "Telco_Customer_Churn[TotalCharges]": 168.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6356-ELRKD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.6, "Telco_Customer_Churn[TotalCharges]": 95.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0952-KMEEH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 98.15, "Telco_Customer_Churn[TotalCharges]": 1230.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6645-MXQJT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 97.1, "Telco_Customer_Churn[TotalCharges]": 184.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4831-EOBFE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.65, "Telco_Customer_Churn[TotalCharges]": 2649.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1482-OXZSY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 100.4, "Telco_Customer_Churn[TotalCharges]": 2936.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9658-WYUFB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.4, "Telco_Customer_Churn[TotalCharges]": 1617.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4325-NFSKC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.6, "Telco_Customer_Churn[TotalCharges]": 1660.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5287-QWLKY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.1, "Telco_Customer_Churn[TotalCharges]": 7548.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9069-LGEUL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.95, "Telco_Customer_Churn[TotalCharges]": 1406.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0730-KOAVE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.3, "Telco_Customer_Churn[TotalCharges]": 2679.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3062-ICYZQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.8, "Telco_Customer_Churn[TotalCharges]": 4539.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4524-QCSSM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.65, "Telco_Customer_Churn[TotalCharges]": 1156.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4760-THGOT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.1, "Telco_Customer_Churn[TotalCharges]": 4107.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7634-WSWDB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 38.5, "Telco_Customer_Churn[TotalCharges]": 330.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2988-GBIVW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.85, "Telco_Customer_Churn[TotalCharges]": 6470.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0637-UBJRP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 1095.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4824-GUCBY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.7, "Telco_Customer_Churn[TotalCharges]": 1820.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9948-YPTDG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.45, "Telco_Customer_Churn[TotalCharges]": 3013.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8624-GIOUT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.75, "Telco_Customer_Churn[TotalCharges]": 2934.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5353-WILCI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.05, "Telco_Customer_Churn[TotalCharges]": 1522.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1575-KRZZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.2, "Telco_Customer_Churn[TotalCharges]": 220.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1928-BXYIV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 61.15, "Telco_Customer_Churn[TotalCharges]": 61.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2676-OXPPQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.7, "Telco_Customer_Churn[TotalCharges]": 335.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4833-QTJNO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.85, "Telco_Customer_Churn[TotalCharges]": 5588.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3541-ZNUHK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.1, "Telco_Customer_Churn[TotalCharges]": 4600.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9577-WJVCQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.45, "Telco_Customer_Churn[TotalCharges]": 3687.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5619-PTMIK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 53.1, "Telco_Customer_Churn[TotalCharges]": 2459.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5133-VRSAB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.35, "Telco_Customer_Churn[TotalCharges]": 216.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5151-HQRDG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.05, "Telco_Customer_Churn[TotalCharges]": 2030.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2956-GGUCQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.85, "Telco_Customer_Churn[TotalCharges]": 1772.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2533-TIBIX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.2, "Telco_Customer_Churn[TotalCharges]": 469.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9526-BIHHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.7, "Telco_Customer_Churn[TotalCharges]": 29.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9626-WEQRM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.15, "Telco_Customer_Churn[TotalCharges]": 110.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0032-PGELS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.5, "Telco_Customer_Churn[TotalCharges]": 30.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6390-DSAZX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 73.6, "Telco_Customer_Churn[TotalCharges]": 73.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8695-WDYEA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.25, "Telco_Customer_Churn[TotalCharges]": 51.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9496-IVVRP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 581.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9644-UMGQA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.15, "Telco_Customer_Churn[TotalCharges]": 295.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0384-RVBPI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 64.4, "Telco_Customer_Churn[TotalCharges]": 1398.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5766-XQXMQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 68.85, "Telco_Customer_Churn[TotalCharges]": 1970.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6873-UDNLD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 67.45, "Telco_Customer_Churn[TotalCharges]": 2731.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1852-XEMDW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 65.05, "Telco_Customer_Churn[TotalCharges]": 1427.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5236-XMZJY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.65, "Telco_Customer_Churn[TotalCharges]": 2536.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0289-IVARM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 60.55, "Telco_Customer_Churn[TotalCharges]": 1982.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4712-AUQZO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 33.6, "Telco_Customer_Churn[TotalCharges]": 550.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8221-EQDGL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 61.0, "Telco_Customer_Churn[TotalCharges]": 2130.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6067-NGCEU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.05, "Telco_Customer_Churn[TotalCharges]": 7107.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2684-EIWEO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 91.7, "Telco_Customer_Churn[TotalCharges]": 2758.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6416-YJTTB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.5, "Telco_Customer_Churn[TotalCharges]": 795.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8189-HBVRW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.8, "Telco_Customer_Churn[TotalCharges]": 4921.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7181-BQYBV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 102.45, "Telco_Customer_Churn[TotalCharges]": 102.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5609-IMCGG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.35, "Telco_Customer_Churn[TotalCharges]": 1302.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2479-BRAMR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.75, "Telco_Customer_Churn[TotalCharges]": 3273.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0265-PSUAE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 100.7, "Telco_Customer_Churn[TotalCharges]": 1522.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0365-TRTPY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 91.2, "Telco_Customer_Churn[TotalCharges]": 3382.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2455-USLMV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.75, "Telco_Customer_Churn[TotalCharges]": 2613.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2133-TSRRM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.35, "Telco_Customer_Churn[TotalCharges]": 3688.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0523-VNGTF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.5, "Telco_Customer_Churn[TotalCharges]": 2566.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7351-MHQVU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.95, "Telco_Customer_Churn[TotalCharges]": 307.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9754-CLVZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 38.85, "Telco_Customer_Churn[TotalCharges]": 1025.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9501-UKKNL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.7, "Telco_Customer_Churn[TotalCharges]": 3005.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4430-UZIPO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 36.85, "Telco_Customer_Churn[TotalCharges]": 108.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7074-STDCN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 39, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 40.6, "Telco_Customer_Churn[TotalCharges]": 1494.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9572-WUKSB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.9, "Telco_Customer_Churn[TotalCharges]": 92.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5136-RGMZO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.05, "Telco_Customer_Churn[TotalCharges]": 2168.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5356-CSVSQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.6, "Telco_Customer_Churn[TotalCharges]": 174.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5924-IFQTT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.8, "Telco_Customer_Churn[TotalCharges]": 930.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7925-PNRGI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 81.3, "Telco_Customer_Churn[TotalCharges]": 3541.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4489-SNOJF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.25, "Telco_Customer_Churn[TotalCharges]": 2568.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2257-BOVXD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 66.6, "Telco_Customer_Churn[TotalCharges]": 979.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2475-MROZF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 2852.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5240-CAOYT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 57, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 87.55, "Telco_Customer_Churn[TotalCharges]": 4884.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5433-KYGHE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 1164.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6234-PFPXL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.9, "Telco_Customer_Churn[TotalCharges]": 2234.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1216-BGTSP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 108.45, "Telco_Customer_Churn[TotalCharges]": 4964.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2522-AHJXR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 109.45, "Telco_Customer_Churn[TotalCharges]": 6572.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3737-GCSPV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.2, "Telco_Customer_Churn[TotalCharges]": 1222.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2931-SVLTV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 110.1, "Telco_Customer_Churn[TotalCharges]": 4469.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2302-ANTDP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 117.45, "Telco_Customer_Churn[TotalCharges]": 5438.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3898-GUYTS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 97.05, "Telco_Customer_Churn[TotalCharges]": 4385.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9572-MTILT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 106.75, "Telco_Customer_Churn[TotalCharges]": 6252.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2279-AXJJK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.65, "Telco_Customer_Churn[TotalCharges]": 5088.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5827-MWCZK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.95, "Telco_Customer_Churn[TotalCharges]": 5432.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6284-AHOOQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.5, "Telco_Customer_Churn[TotalCharges]": 1910.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4716-HHKQH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 107.05, "Telco_Customer_Churn[TotalCharges]": 2172.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1450-GALXR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.5, "Telco_Customer_Churn[TotalCharges]": 1058.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6599-RCLCJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 109.55, "Telco_Customer_Churn[TotalCharges]": 5124.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1320-REHCS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 110.75, "Telco_Customer_Churn[TotalCharges]": 5832.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9168-INPSZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 104.15, "Telco_Customer_Churn[TotalCharges]": 4495.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2357-COQEK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.3, "Telco_Customer_Churn[TotalCharges]": 2890.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2027-WKXMW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 108.75, "Telco_Customer_Churn[TotalCharges]": 6871.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9578-FOMUK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.8, "Telco_Customer_Churn[TotalCharges]": 324.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8896-BQTTI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6509-TSGWN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 26.45, "Telco_Customer_Churn[TotalCharges]": 911.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9546-KDTRB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.7, "Telco_Customer_Churn[TotalCharges]": 465.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7803-XOCCZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 4326.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1410-RSCMR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.35, "Telco_Customer_Churn[TotalCharges]": 515.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0207-MDKNV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 105.1, "Telco_Customer_Churn[TotalCharges]": 1582.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0701-TJSEF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 68.25, "Telco_Customer_Churn[TotalCharges]": 576.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1356-MKYSK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 78.65, "Telco_Customer_Churn[TotalCharges]": 483.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7143-BQIBA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.25, "Telco_Customer_Churn[TotalCharges]": 612.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4741-WWJQZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.15, "Telco_Customer_Churn[TotalCharges]": 194.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1871-MOWRM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.85, "Telco_Customer_Churn[TotalCharges]": 866.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5208-HFSBT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.05, "Telco_Customer_Churn[TotalCharges]": 102.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1564-HJUVY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 63.75, "Telco_Customer_Churn[TotalCharges]": 226.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7691-KGKGP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 65.0, "Telco_Customer_Churn[TotalCharges]": 3363.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5206-XZZQI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 80.6, "Telco_Customer_Churn[TotalCharges]": 4348.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8118-TJAFG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.5, "Telco_Customer_Churn[TotalCharges]": 906.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8266-VBFQL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.4, "Telco_Customer_Churn[TotalCharges]": 356.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7319-VENRZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 64.3, "Telco_Customer_Churn[TotalCharges]": 445.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0125-LZQXK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.35, "Telco_Customer_Churn[TotalCharges]": 1553.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8640-SDGKB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.4, "Telco_Customer_Churn[TotalCharges]": 299.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6204-IEUXJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.1, "Telco_Customer_Churn[TotalCharges]": 217.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7295-JOMMD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.1, "Telco_Customer_Churn[TotalCharges]": 396.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3629-WEAAM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 64.1, "Telco_Customer_Churn[TotalCharges]": 504.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5309-TAIKL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.8, "Telco_Customer_Churn[TotalCharges]": 418.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5701-YVSVF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 82.9, "Telco_Customer_Churn[TotalCharges]": 880.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8679-JOEVF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.4, "Telco_Customer_Churn[TotalCharges]": 1023.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5949-EBSQK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.45, "Telco_Customer_Churn[TotalCharges]": 229.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6034-YMTOB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.65, "Telco_Customer_Churn[TotalCharges]": 399.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0013-EXCHZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 83.9, "Telco_Customer_Churn[TotalCharges]": 267.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9210-IAHGH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.75, "Telco_Customer_Churn[TotalCharges]": 450.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3914-FDRHP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.25, "Telco_Customer_Churn[TotalCharges]": 770.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5688-KZTSN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 20.0, "Telco_Customer_Churn[TotalCharges]": 288.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1577-HKTFG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.65, "Telco_Customer_Churn[TotalCharges]": 655.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0114-RSRRW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 187.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4623-ZKHLY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 471.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7787-BNTZM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 130.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8780-RSYYU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 532.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5562-YJQGT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.35, "Telco_Customer_Churn[TotalCharges]": 35.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9970-QBCDA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.7, "Telco_Customer_Churn[TotalCharges]": 129.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6469-QJKZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 91.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0787-LHDYT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.6, "Telco_Customer_Churn[TotalCharges]": 330.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8573-CGOCC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 294.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9837-FWLCH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 239.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9063-ZGTUY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1182.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4083-EUGRJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.25, "Telco_Customer_Churn[TotalCharges]": 178.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2732-ISEZX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.5, "Telco_Customer_Churn[TotalCharges]": 104.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8681-ICONS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.65, "Telco_Customer_Churn[TotalCharges]": 654.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4986-MXSFP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.0, "Telco_Customer_Churn[TotalCharges]": 40.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9364-YKUVW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 309.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1498-DQNRX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 573.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0519-DRGTI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.35, "Telco_Customer_Churn[TotalCharges]": 442.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1755-RMCXH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 40.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7521-YXVZY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 58.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2717-HVIZY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.05, "Telco_Customer_Churn[TotalCharges]": 163.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1760-CAZHT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.8, "Telco_Customer_Churn[TotalCharges]": 460.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0030-FNXPP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 57.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1051-GEJLJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.5, "Telco_Customer_Churn[TotalCharges]": 27.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8942-DBMHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 255.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3750-RNQKR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 246.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1796-JANOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 38.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0310-VQXAM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 178.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2308-STERM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 61.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1539-LNKHM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 266.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9770-LXDBK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 63.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7302-ZHMHP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.15, "Telco_Customer_Churn[TotalCharges]": 19.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7989-CHGTL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.6, "Telco_Customer_Churn[TotalCharges]": 19.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3030-ZKIWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.05, "Telco_Customer_Churn[TotalCharges]": 20.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7243-LCGGZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.9, "Telco_Customer_Churn[TotalCharges]": 20.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0673-IGUQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 20.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8974-OVACP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 20.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8073-IJDCM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 20.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1963-VAUKV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 20.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2480-JZOSN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.65, "Telco_Customer_Churn[TotalCharges]": 20.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4760-XOHVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 19.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1098-TDVUQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.25, "Telco_Customer_Churn[TotalCharges]": 19.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1194-SPVSP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.65, "Telco_Customer_Churn[TotalCharges]": 19.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9174-FKWZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 19.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7853-WNZSY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 19.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9374-YOLBJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.25, "Telco_Customer_Churn[TotalCharges]": 19.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2273-QCKXA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.05, "Telco_Customer_Churn[TotalCharges]": 49.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9732-KPKBW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 53.95, "Telco_Customer_Churn[TotalCharges]": 53.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3192-NQECA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 110.0, "Telco_Customer_Churn[TotalCharges]": 7611.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7317-GGVPB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 108.6, "Telco_Customer_Churn[TotalCharges]": 7690.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0607-DAAHE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 1052.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7359-SSBJK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 64, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.2, "Telco_Customer_Churn[TotalCharges]": 4481.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8089-UZWLX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 104.05, "Telco_Customer_Churn[TotalCharges]": 7413.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0707-HOVVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.5, "Telco_Customer_Churn[TotalCharges]": 5212.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7515-LODFU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 1356.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0201-MIBOL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 102.4, "Telco_Customer_Churn[TotalCharges]": 6471.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2996-XAUVF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 40.05, "Telco_Customer_Churn[TotalCharges]": 2799.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1139-WUOAH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 57, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 53.35, "Telco_Customer_Churn[TotalCharges]": 3090.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4891-NLUBA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.45, "Telco_Customer_Churn[TotalCharges]": 3751.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0230-WEQUW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 56.6, "Telco_Customer_Churn[TotalCharges]": 3789.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4472-LVYGI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 0, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 52.55, "Telco_Customer_Churn[TotalCharges]": null, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0895-UADGO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.55, "Telco_Customer_Churn[TotalCharges]": 343.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2773-MADBQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 53.1, "Telco_Customer_Churn[TotalCharges]": 1901.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9885-MFVSU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 46.35, "Telco_Customer_Churn[TotalCharges]": 1662.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6505-OZNPG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 63.4, "Telco_Customer_Churn[TotalCharges]": 348.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1194-BHJYC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 62.15, "Telco_Customer_Churn[TotalCharges]": 3778.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0774-RMNUW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.7, "Telco_Customer_Churn[TotalCharges]": 4122.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4940-KHCWD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 37.7, "Telco_Customer_Churn[TotalCharges]": 2288.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7639-LIAYI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.75, "Telco_Customer_Churn[TotalCharges]": 4217.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4500-HKANN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.7, "Telco_Customer_Churn[TotalCharges]": 1414.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9769-TSBZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 66.0, "Telco_Customer_Churn[TotalCharges]": 4891.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8591-TKMZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 111.1, "Telco_Customer_Churn[TotalCharges]": 6555.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8630-QSGXK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.2, "Telco_Customer_Churn[TotalCharges]": 3901.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2775-SEFEE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 0, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.9, "Telco_Customer_Churn[TotalCharges]": null, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6691-CCIHA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.95, "Telco_Customer_Churn[TotalCharges]": 5150.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7014-ZZXAW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.25, "Telco_Customer_Churn[TotalCharges]": 1732.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1982-FEBTD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.6, "Telco_Customer_Churn[TotalCharges]": 514.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8780-IHCRN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.65, "Telco_Customer_Churn[TotalCharges]": 1574.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9337-SRRNI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.3, "Telco_Customer_Churn[TotalCharges]": 1673.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3768-VHXQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.85, "Telco_Customer_Churn[TotalCharges]": 1583.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8148-NLEGT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 22.95, "Telco_Customer_Churn[TotalCharges]": 1014.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8606-OEGQZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.3, "Telco_Customer_Churn[TotalCharges]": 454.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5846-ABOBJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.45, "Telco_Customer_Churn[TotalCharges]": 1730.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0394-YONDK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.15, "Telco_Customer_Churn[TotalCharges]": 1790.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0485-ZBSLN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.75, "Telco_Customer_Churn[TotalCharges]": 1715.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6010-DDPPW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.15, "Telco_Customer_Churn[TotalCharges]": 1940.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7601-DHFWZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 1183.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1555-HAPSU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 23.9, "Telco_Customer_Churn[TotalCharges]": 1663.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4018-PPNDW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.1, "Telco_Customer_Churn[TotalCharges]": 1551.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5968-HYJRZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.55, "Telco_Customer_Churn[TotalCharges]": 1160.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6609-MXJHJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 789.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1240-HCBOH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 26.1, "Telco_Customer_Churn[TotalCharges]": 1759.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4458-KVRBJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 1510.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1092-WPIVQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 428.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3389-KTRXV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 23.85, "Telco_Customer_Churn[TotalCharges]": 625.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5327-CNLUQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.9, "Telco_Customer_Churn[TotalCharges]": 4473.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0727-BNRLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 97.65, "Telco_Customer_Churn[TotalCharges]": 6743.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5915-ANOEI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 79.15, "Telco_Customer_Churn[TotalCharges]": 5536.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0420-TXVSG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 66.1, "Telco_Customer_Churn[TotalCharges]": 4428.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3486-HOOGQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.7, "Telco_Customer_Churn[TotalCharges]": 5743.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6953-PBDIN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 72.95, "Telco_Customer_Churn[TotalCharges]": 5265.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6253-GNHWH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.1, "Telco_Customer_Churn[TotalCharges]": 5224.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1904-WAJAA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.35, "Telco_Customer_Churn[TotalCharges]": 1558.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6900-RBKER", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 89.45, "Telco_Customer_Churn[TotalCharges]": 4577.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5930-GBIWP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 81.5, "Telco_Customer_Churn[TotalCharges]": 5553.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3902-MIVLE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.7, "Telco_Customer_Churn[TotalCharges]": 4676.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4713-ZBURT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.7, "Telco_Customer_Churn[TotalCharges]": 4634.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3259-QMXUN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 58, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.1, "Telco_Customer_Churn[TotalCharges]": 4890.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5360-LJCNJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.15, "Telco_Customer_Churn[TotalCharges]": 7555.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5321-NTRKC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.85, "Telco_Customer_Churn[TotalCharges]": 5234.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6766-HFKLA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.2, "Telco_Customer_Churn[TotalCharges]": 5744.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0266-CLZKZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.65, "Telco_Customer_Churn[TotalCharges]": 6717.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7037-MTYVW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.4, "Telco_Customer_Churn[TotalCharges]": 3297.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5003-XZWWO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.2, "Telco_Customer_Churn[TotalCharges]": 5956.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3612-YUNGG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 64, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 109.2, "Telco_Customer_Churn[TotalCharges]": 6741.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2773-OVBPK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.3, "Telco_Customer_Churn[TotalCharges]": 7567.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7398-HPYZQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.55, "Telco_Customer_Churn[TotalCharges]": 6404.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7055-JCGNI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.95, "Telco_Customer_Churn[TotalCharges]": 7795.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7663-CUXZB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 113.75, "Telco_Customer_Churn[TotalCharges]": 6561.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8690-ZVLCL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.0, "Telco_Customer_Churn[TotalCharges]": 6161.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1741-WTPON", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 115.85, "Telco_Customer_Churn[TotalCharges]": 6567.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6258-PVZWJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.8, "Telco_Customer_Churn[TotalCharges]": 6302.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6556-DBKZF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.05, "Telco_Customer_Churn[TotalCharges]": 5436.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1206-EHBDD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.3, "Telco_Customer_Churn[TotalCharges]": 4513.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9128-CPXKI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.8, "Telco_Customer_Churn[TotalCharges]": 5655.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6064-ZATLR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 52.85, "Telco_Customer_Churn[TotalCharges]": 1498.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2296-DKZFP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 4386.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9174-IHETN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 50, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.35, "Telco_Customer_Churn[TotalCharges]": 3533.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5130-YPIRV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 72.0, "Telco_Customer_Churn[TotalCharges]": 4284.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5229-DTFYB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.8, "Telco_Customer_Churn[TotalCharges]": 3959.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0815-MFZGM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.0, "Telco_Customer_Churn[TotalCharges]": 4135.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6568-POCUI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.2, "Telco_Customer_Churn[TotalCharges]": 4285.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1063-DHQJF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 92.15, "Telco_Customer_Churn[TotalCharges]": 6480.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5696-CEIQJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.15, "Telco_Customer_Churn[TotalCharges]": 6895.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3186-AJIEK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.65, "Telco_Customer_Churn[TotalCharges]": 6844.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8587-XYZSF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.55, "Telco_Customer_Churn[TotalCharges]": 3260.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0942-KOWSM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.8, "Telco_Customer_Churn[TotalCharges]": 2369.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5816-JMLGY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.4, "Telco_Customer_Churn[TotalCharges]": 5717.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7771-CFQRQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 63.8, "Telco_Customer_Churn[TotalCharges]": 3007.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0440-EKDCF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 60.15, "Telco_Customer_Churn[TotalCharges]": 3753.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9755-JHNMN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 67.4, "Telco_Customer_Churn[TotalCharges]": 3306.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9372-TXXPS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.85, "Telco_Customer_Churn[TotalCharges]": 3483.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4994-OBRSZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 76.1, "Telco_Customer_Churn[TotalCharges]": 1054.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3563-SVYLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.65, "Telco_Customer_Churn[TotalCharges]": 4375.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1221-GHZEP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 65.1, "Telco_Customer_Churn[TotalCharges]": 3846.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2999-AANRQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.05, "Telco_Customer_Churn[TotalCharges]": 1524.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7560-QJAVJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.6, "Telco_Customer_Churn[TotalCharges]": 5589.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5310-NOOVA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 907.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3170-NMYVV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 50, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 930.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0505-SPOOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 1397.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6961-MJKBO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 943.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8750-QWZAJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 1378.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6828-HMKWP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 21.05, "Telco_Customer_Churn[TotalCharges]": 262.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2626-VEEWG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1284.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2030-BTZRO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 107.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7469-LKBCI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 18.95, "Telco_Customer_Churn[TotalCharges]": 326.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0040-HALCW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 1090.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1098-KFQEC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1083.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3764-MNMOI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 908.15, "Telco_Customer_Churn[Churn]": false}], "samplecount": 716, "samplefile": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a729/part-00000-7dd5e575-e4c9-4c28-8c46-8a33aa84d8d3-c000.csv"}, {"_id": "64edfd7f5820f11829d9a72a", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1693318524.csv", "in": ["64edfd7f5820f11829d9a729"], "out": ["64edfd7f5820f11829d9a72b"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Telco_churn_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "64edfd7f5820f11829d9a726", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "100", "sampledata": [{"Telco_Customer_Churn[customerID]": "0390-DCFDQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 160.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5940-AHUHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 172.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5583-SXDAG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 150.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4110-PFEUZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 388.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8040-MNRTF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 136.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1820-TQVEV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 237.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5875-YPQFJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 422.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7206-GZCDC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 12.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8375-DKEBR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 149.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9804-ICWBG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 81.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8380-PEFPE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 152.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3494-JCHRQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 419.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8000-REIQB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 156.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8309-IEYJD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 373.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3177-LASXD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 181.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1084-UQCHV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 28.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "8051-HJRLT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 105.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0151-ONTOV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 282.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6140-QNRQQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 274.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1846-XWOQN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 484.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9603-OAIHC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 469.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5186-SAMNZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 428.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "2262-SLNVK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 103.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5539-TMZLF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 396.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7409-KIUTL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 252.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0679-IDSTG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 112.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5542-TBBWB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 337.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1086-LXKFY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 51.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2636-ALXXZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 260.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1640-PLFMP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 45.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9617-INGJY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 170.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4510-HIMLV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 326.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3878-AVSOQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 85.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3716-BDVDB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 332.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9488-HGMJH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 359.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0968-GSIKN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 442.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4806-HIPDW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 68.0, "Telco_Customer_Churn[TotalCharges]": 68.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 483.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8644-XLFBW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 71.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0812-WUPTB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 426.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3871-IKPYH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 56.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2920-RNCEZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 448.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1915-IOFGU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 403.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7665-TOALD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 256.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6416-TVAIH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 68.0, "Telco_Customer_Churn[TotalCharges]": 68.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 169.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3066-RRJIO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 78.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0515-YPMCW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 235.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4603-JANFB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 234.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7908-QCBCA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 342.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7465-ZZRVX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 94.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4702-IOQDC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 111.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3428-XZMAZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 436.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1853-UDXBW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 407.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5032-MIYKT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 46.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0511-JTEOY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 338.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5134-IKDAY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 346.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5884-GCYMI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 479.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6653-CBBOM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 362.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4759-TRPLW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 145.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8062-YBDOE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 34.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5376-DEQCP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 104.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2506-TNFCO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 80.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2619-WFQWU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 292.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5550-VFRLC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 377.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3244-DCJWY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 430.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8042-JVNFH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 351.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9985-MWVIX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 283.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4871-JTKJF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 89.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3422-LYEPQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 71.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 447.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1363-TXLSL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 441.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4550-EVXNY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 463.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0519-XUZJU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 416.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9605-WGJVW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 70.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7153-OANIO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 225.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0328-GRPMV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 42.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0488-GSLFR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 411.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9728-FTTVZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 0.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7254-IQWOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 209.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2856-HYAPG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 68.0, "Telco_Customer_Churn[TotalCharges]": 68.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 417.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1031-IIDEO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 76.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1062-LHZOD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 285.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1447-GIQMR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 23.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7660-HDPJV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 491.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2446-PLQVO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 350.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4501-EQDRN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 492.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "6457-GIRWB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 241.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6502-MJQAE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 69.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 141.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1122-JWTJW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 70.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 482.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3413-BMNZE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 98.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "2135-RXIHG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 284.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6582-OIVSP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 391.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8705-WZCYL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 20.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5522-JBWMO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 228.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9244-ZVAPM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 361.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0887-HJGAR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 365.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6982-SSHFK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 162.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9448-REEVD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 424.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "9117-SHLZX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 456.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3165-HDOEW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 289.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5552-ZNFSJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 405.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2833-SLKDQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 202.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4237-RLAQD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 223.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1478-VPOAD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 43.0, "Telco_Customer_Churn[TotalCharges]": 43.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 401.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6650-VJONK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 43.0, "Telco_Customer_Churn[TotalCharges]": 43.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 266.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "8080-DDEMJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 190.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8356-WUAOJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 319.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3669-OYSJI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 46.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 95.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1612-EOHDH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 108.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7054-LGEQW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 336.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3961-SXAXY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 67.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "3566-HJGPK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 435.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4193-ORFCL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 434.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9828-AOQLM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 446.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7065-YUNRY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 191.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5858-EAFCZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 159.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1895-QTKDO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 43.0, "Telco_Customer_Churn[TotalCharges]": 43.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 36.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "4706-DGAHW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 356.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5103-MHMHY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 106.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4373-VVHQL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 353.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1942-OQFRW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 287.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0415-MOSGF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 345.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4146-SVFUD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 485.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5696-QURRL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 77.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5692-FPTAH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 4.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5133-POWUA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 199.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5077-DXTCG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 473.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7593-XFKDI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 46.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 73.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7663-RGWBC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 281.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8950-MTZNV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 478.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8710-YGLWG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 185.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6128-CZOMY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 327.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6185-TASNN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 46.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 207.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7825-GKXMW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 219.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2903-YYTBW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 466.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7359-PTSXY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 431.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6959-UWKHF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 42.0, "Telco_Customer_Churn[TotalCharges]": 42.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 97.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8720-RQSBJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 300.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7754-IXRMC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 66.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2672-OJQZP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 372.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6145-NNPNO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 302.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "6595-COKXZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 87.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8180-AKMJV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 151.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "4855-SNKMY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 187.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7252-NTGSS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 16.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2082-CEFLT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 211.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6142-VSJQO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 177.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "2275-RBYQS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 427.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1976-CFOCS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 46.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 166.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4361-JEIVL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 173.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9214-EKVXR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 409.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0082-LDZUE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 305.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4847-QNOKA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.0, "Telco_Customer_Churn[TotalCharges]": 44.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 134.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1963-SVUCV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 75.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6127-IYJOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 60.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3085-QUOZK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 43.0, "Telco_Customer_Churn[TotalCharges]": 43.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 452.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3926-CUQZX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 15.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1024-GUALD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 443.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4195-NZGTA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 322.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6366-ZGQGL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 63.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "0021-IKXGC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.0, "Telco_Customer_Churn[TotalCharges]": 72.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 355.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6158-HDPXZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 146.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1452-VOQCH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 325.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8372-JUXUI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 176.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3276-HDUEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 231.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9227-LUNBG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 290.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6513-EECDB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 73.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 184.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6358-LYNGM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 91.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7537-RBWEA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 488.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1768-ZAIFU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 288.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3334-CTHOL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 49.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 378.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "6960-HVYXR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 76.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 313.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7767-UXAGJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 132.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8445-DNBAE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 72.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5240-IJOQT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 79.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0661-XEYAN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 116.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1157-BQCUW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 248.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7442-YGZFK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 49.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 14.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "5834-ASPWA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 261.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8775-ERLNB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 129.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2538-OIMXF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 275.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9787-XVQIU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 1.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0248-IPDFW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 5.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7180-PISOG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 74.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2672-DZUOY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 259.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2609-IAICY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 77.0, "Telco_Customer_Churn[TotalCharges]": 77.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 309.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3707-GNWHM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 171.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4749-VFKVB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 55.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4102-OQUPX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 232.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2740-TVLFN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 334.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2209-XADXF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 265.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "6032-IGALN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 381.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9907-SWKKF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 270.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7365-BVCJH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 444.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4988-IQIGL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 131.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3746-EUBYR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 154.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "0612-RTZZA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 437.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8816-VXNZD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 244.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2103-ZRXFN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 143.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9136-ALYBR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 414.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8260-NGFNY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 25.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1833-VGRUM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 251.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1334-FJSVR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 102.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0023-HGHWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 421.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4729-XKASR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 249.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9058-CBREO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 124.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9895-VFOXH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 196.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2982-IHMFT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 468.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7932-WPTDS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 497.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8473-VUVJN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 73.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 37.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2862-PFNIK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 480.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4367-NHWMM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 68.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3797-VTIDR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 23.0, "Telco_Customer_Churn[TotalCharges]": 23.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 481.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1496-GGSUK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 440.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3551-HUAZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 368.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0616-ATFGB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 269.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3439-GVUSX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 454.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7242-QZLXF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 58.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9248-OJYKK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 76.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 115.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4415-IJZTP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 30.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5351-QESIO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 24.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 142.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0723-DRCLG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 168.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6894-LFHLY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 174.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3091-FYHKI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 127.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1285-OKIPP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 323.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3583-EKAPL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 50.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9282-IZGQK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 165.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1448-PWKYE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 10.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8603-IJWDN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 86.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 321.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0841-NULXI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 198.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5673-FSSMF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 60.0, "Telco_Customer_Churn[TotalCharges]": 60.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 61.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3049-NDXFL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 475.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2018-QKYGT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.0, "Telco_Customer_Churn[TotalCharges]": 81.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 258.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9822-OAOVB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 277.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7854-FOKSF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 408.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1740-CSDJP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 367.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "4074-SJFFA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 54.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 218.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4727-MCYZG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 158.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2004-OCQXK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.0, "Telco_Customer_Churn[TotalCharges]": 81.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 393.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0495-RVCBF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 317.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5501-TVMGM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 462.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9124-LHCJQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 41.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7594-RQHXR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 126.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6086-ESGRL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 40.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "5275-SQEIZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 316.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8945-GRKHX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.0, "Telco_Customer_Churn[TotalCharges]": 78.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 358.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1069-XAIEM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 2.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4614-NUVZD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.0, "Telco_Customer_Churn[TotalCharges]": 81.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 354.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6629-CZTTH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 273.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5393-RXQSZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 22.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3841-CONLJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 413.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3063-QFSZL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 140.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2868-MZAGQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 92.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2867-UIMSS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 11.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3751-KTZEL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 423.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5909-ECHUI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.0, "Telco_Customer_Churn[TotalCharges]": 56.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 279.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6457-USBER", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 125.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5919-TMRGD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 387.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2232-DMLXU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 121.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5192-EBGOV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 268.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0970-ETWGE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 123.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3027-ZTDHO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 216.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7294-TMAOP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 472.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7439-DKZTW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 400.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5494-HECPR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 487.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6260-ONULR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 62.0, "Telco_Customer_Churn[TotalCharges]": 62.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 459.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6567-HOOPW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 122.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8580-AECUZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 227.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0375-HVGXO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 34.0, "Telco_Customer_Churn[TotalCharges]": 34.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 460.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3877-JRJIP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 59.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 330.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9497-QCMMS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.0, "Telco_Customer_Churn[TotalCharges]": 93.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 257.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9300-RENDD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 278.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3988-RQIXO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.0, "Telco_Customer_Churn[TotalCharges]": 91.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 82.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2514-GINMM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 304.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3722-WPXTK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 88.0, "Telco_Customer_Churn[TotalCharges]": 88.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 382.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4910-GMJOT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.0, "Telco_Customer_Churn[TotalCharges]": 94.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 453.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2725-KXXWT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 18.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3518-PZXZQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 331.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4826-XTSOH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 86.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 35.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6857-VWJDT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 95.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 9.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3801-HMYNL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 449.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1761-AEZZR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 320.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7120-RFMVS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.0, "Telco_Customer_Churn[TotalCharges]": 84.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 348.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2386-LAHRK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 53.0, "Telco_Customer_Churn[TotalCharges]": 53.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 451.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8149-RSOUN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.0, "Telco_Customer_Churn[TotalCharges]": 93.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 399.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9885-CSMWE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.0, "Telco_Customer_Churn[TotalCharges]": 78.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 255.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5178-LMXOP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 95.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 109.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7274-RTAPZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 43.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5960-WPXQM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 38.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6372-RFVNS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.0, "Telco_Customer_Churn[TotalCharges]": 78.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 233.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2777-PHDEI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.0, "Telco_Customer_Churn[TotalCharges]": 78.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 392.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5797-APWZC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 347.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9019-QVLZD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 264.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1455-ESIQH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 341.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0318-QUUOB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 369.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8740-CRYFY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.0, "Telco_Customer_Churn[TotalCharges]": 78.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 32.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9300-AGZNL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.0, "Telco_Customer_Churn[TotalCharges]": 94.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 208.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5378-IKEEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.0, "Telco_Customer_Churn[TotalCharges]": 35.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 291.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9725-SCPZG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 490.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7577-SWIFR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 324.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3776-EKTKM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 36.0, "Telco_Customer_Churn[TotalCharges]": 36.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 195.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8058-INTPH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 204.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8821-XNHVZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 226.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1941-HOSAM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 186.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4273-MBHYA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 212.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7503-ZGUZJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 84.0, "Telco_Customer_Churn[TotalCharges]": 84.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 192.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4912-PIGUY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.0, "Telco_Customer_Churn[TotalCharges]": 84.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 53.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4929-BSTRX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 53.0, "Telco_Customer_Churn[TotalCharges]": 53.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 205.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1415-YFWLT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 89.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 206.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9507-EXLTT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 137.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "7568-PODML", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 45.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 363.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6521-YYTYI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.0, "Telco_Customer_Churn[TotalCharges]": 93.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 311.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4351-QLCSU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 55.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 375.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "0674-EYYZV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 54.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 147.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0295-PPHDO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 95.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 175.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 0, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7590-VHVEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 29.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 133.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8665-UTDHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 30.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 374.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6317-YPKDH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 29.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 117.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "9514-JDSKI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 40.0, "Telco_Customer_Churn[TotalCharges]": 40.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 476.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6905-NIQIN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 239.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5167-ZFFMM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 247.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "9399-APLBT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 183.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2207-NHRJK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 467.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4065-JJAVA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 49.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 298.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5868-CZJDR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 31.0, "Telco_Customer_Churn[TotalCharges]": 31.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 380.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7595-EUIVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 420.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1866-OBPNR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 167.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "5054-IEXZT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 128.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0137-OCGAB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 80.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 48.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1845-ZLLIG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 328.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1406-PUQVY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 49.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 425.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2254-DLXRI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 238.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4317-VTEOA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 44.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6689-KXGBO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 50.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 179.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3178-FESZO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 100.0, "Telco_Customer_Churn[TotalCharges]": 100.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 470.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "2013-SGDXK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.0, "Telco_Customer_Churn[TotalCharges]": 84.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 31.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4274-OWWYO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 494.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3765-JXVKY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 315.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9840-EFJQB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 194.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6907-FLBER", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 54.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 299.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9752-ZNQUT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 48.0, "Telco_Customer_Churn[TotalCharges]": 48.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 312.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5196-SGOAK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 75.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 357.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4844-JJWUY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 86.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 477.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1628-BIZYP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 85.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 19.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8775-LHDJH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 113.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3296-SILRA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 76.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 217.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1977-STDKI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 73.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 471.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7493-TPUWZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 213.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9894-EZEWG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 74.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 33.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1471-GIQKQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 49.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 457.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6614-VBEGU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 1614.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 200.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "0823-HSCDJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 2550.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 221.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9505-SQFSW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 40.0, "Telco_Customer_Churn[TotalCharges]": 92.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 310.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5073-WXOYN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 3027.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 164.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8807-ARQET", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 40.0, "Telco_Customer_Churn[TotalCharges]": 1677.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 90.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "4468-KAZHE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 60.0, "Telco_Customer_Churn[TotalCharges]": 1259.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 271.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2625-TRCZQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 2553.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 439.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7721-JXEAW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 41.0, "Telco_Customer_Churn[TotalCharges]": 2452.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 370.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1636-NTNCO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 207.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 461.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1104-FEJAM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.0, "Telco_Customer_Churn[TotalCharges]": 1802.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 254.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2636-OHFMN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 48.0, "Telco_Customer_Churn[TotalCharges]": 201.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 101.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2141-RRYGO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 68.0, "Telco_Customer_Churn[TotalCharges]": 261.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 474.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "3665-JATSN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.0, "Telco_Customer_Churn[TotalCharges]": 710.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 335.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7284-BUYEC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 229.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 47.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "2041-JIJCI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.0, "Telco_Customer_Churn[TotalCharges]": 370.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 465.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9026-LHEVG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 40.0, "Telco_Customer_Churn[TotalCharges]": 359.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 389.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3329-WDIOK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 155.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 455.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2187-LZGPL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 40.0, "Telco_Customer_Churn[TotalCharges]": 293.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 107.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "6217-TOWGS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 1322.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 318.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1100-DDVRV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 836.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 308.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3669-LVWZB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 305.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 272.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7502-BNYGS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.0, "Telco_Customer_Churn[TotalCharges]": 3168.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 343.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "0980-PVMRC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 2036.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 333.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2969-QWUBZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 96.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 180.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9693-XMUOB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 2997.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 339.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0212-ISBBF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 1098.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 88.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5438-QMDDL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 1130.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 189.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "3999-WRNGR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 3069.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 153.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6778-YSNIH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 114.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 188.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0319-QZTCO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 58.0, "Telco_Customer_Churn[TotalCharges]": 168.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 464.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1697-BCSHV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 58, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 66.0, "Telco_Customer_Churn[TotalCharges]": 3970.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 93.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "4628-CTTLA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 57, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.0, "Telco_Customer_Churn[TotalCharges]": 2111.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 99.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2436-QBZFP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.0, "Telco_Customer_Churn[TotalCharges]": 849.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 84.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1862-SKORY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.0, "Telco_Customer_Churn[TotalCharges]": 1637.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 215.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9633-DENPU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 58.0, "Telco_Customer_Churn[TotalCharges]": 2723.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 498.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "5424-RLQLC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 638.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 39.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "2931-FSOHN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 788.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 383.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6218-KNUBD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.0, "Telco_Customer_Churn[TotalCharges]": 357.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 27.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0786-VSSUD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 39.0, "Telco_Customer_Churn[TotalCharges]": 679.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 130.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5948-UJZLF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 97.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 245.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4827-USJHP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 1023.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 301.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8017-UVSZU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 56.0, "Telco_Customer_Churn[TotalCharges]": 2379.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 26.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1251-KRREG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 114.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 486.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "4130-MZLCC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 244.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 438.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "8229-MYEJZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 498.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 395.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6235-VDHOM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 28.0, "Telco_Customer_Churn[TotalCharges]": 131.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 286.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6543-CPZMK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 248.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 397.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1456-TWCGB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 208.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 433.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9342-VNIMQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 33, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 1665.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 489.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "0811-GSDTP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 382.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 57.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8919-FYFQZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 1359.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 65.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3097-NNSPB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 91.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 148.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "3391-JSQEW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 2058.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 344.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8791-GFXLZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 593.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 366.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "2446-ZKVAF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 56.0, "Telco_Customer_Churn[TotalCharges]": 1074.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 394.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "8967-SZQAS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 765.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 276.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6789-HJBWG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 611.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 371.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9992-UJOEL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 92.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 493.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6625-UTXEW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 612.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 83.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5651-WYIPH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 865.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 262.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "2586-CWXVV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 1621.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 229.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5423-BHIXO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 1739.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 24.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8069-YQQAJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 31.0, "Telco_Customer_Churn[TotalCharges]": 419.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 404.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7776-QWNFX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 1527.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 161.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "6637-KYRCV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 167.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 120.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3723-BFBGR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 1291.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 100.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "8901-HJXTF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 309.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 220.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5156-UMKOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 90.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 445.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1247-QBVSH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 2169.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 201.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7389-KBFIT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 63.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 144.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9163-GHAYE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 48.0, "Telco_Customer_Churn[TotalCharges]": 736.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 118.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1322-AGOQM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 1380.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 139.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1432-FPAXX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 856.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 7.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7636-OWBPG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 381.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 349.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "3082-VQXNH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 94.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 21.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "5402-HTOTQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 875.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 3.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2108-YKQTY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 151.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 297.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "0975-VOOVL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 98.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 59.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "8148-BPLZQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 1734.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 246.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3209-ZPKFI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 2538.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 495.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7579-OOPEC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 115.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 8.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "8805-JNRAZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 103.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 406.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5816-SCGFC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 419.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 458.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7421-ZLUPA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 226.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 314.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5404-GGUKR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 262.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 280.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3345-PBBFH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 393.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 210.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "1226-UDFZR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 114.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 402.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9415-TPKRV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 446.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 303.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7501-VTYLJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 106.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 376.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7740-KKCXF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 1529.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 64.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "2606-RMDHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 208.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 294.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "4353-HYOJD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 1336.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 418.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1078-TDCRN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.0, "Telco_Customer_Churn[TotalCharges]": 82.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 69.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8718-PTMEZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 31.0, "Telco_Customer_Churn[TotalCharges]": 347.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 178.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1114-CENIM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 3092.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 496.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "3173-NVMPX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 501.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 240.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6339-DKLMK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 31.0, "Telco_Customer_Churn[TotalCharges]": 389.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 52.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3873-NFTGI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 767.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 193.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "3570-YUEKJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 2077.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 236.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3538-WZPHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 79.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 29.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7054-ENNGU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 466.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 13.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "9881-VCZEP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 1373.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 197.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8654-DHAOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 101.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 263.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7872-RDDLZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 54.0, "Telco_Customer_Churn[TotalCharges]": 3725.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 54.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6048-QBXKL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 56.0, "Telco_Customer_Churn[TotalCharges]": 118.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 250.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 2, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "3256-EZDBI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 1459.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 306.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "8344-WFMFH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.0, "Telco_Customer_Churn[TotalCharges]": 484.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 432.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1395-OFUWC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 1224.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 293.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "1442-BQPVU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": 0, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.0, "Telco_Customer_Churn[TotalCharges]": 357.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 203.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 1, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1596-OQSPS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 531.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 6.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2843-CQMEG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 1218.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 499.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6304-IJFSQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.0, "Telco_Customer_Churn[TotalCharges]": 130.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 135.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "0094-OIFMO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 1120.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 412.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9947-OTFQU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 1074.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 385.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3488-PGMQJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 606.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 386.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7982-VCELR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.0, "Telco_Customer_Churn[TotalCharges]": 3565.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 214.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "6862-CQUMB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.0, "Telco_Customer_Churn[TotalCharges]": 3646.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 163.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "6599-CEBNN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 2524.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 329.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "0111-KLBQG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 93.0, "Telco_Customer_Churn[TotalCharges]": 2861.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 307.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7916-VCCPB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 1195.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 390.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "0578-SKVMF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.0, "Telco_Customer_Churn[TotalCharges]": 1845.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 114.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5949-XIKAE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.0, "Telco_Customer_Churn[TotalCharges]": 680.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 157.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "6986-IJDHX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 39, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 3266.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 296.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "1216-JWVUX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 1901.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 182.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2189-WWOEW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 1269.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 384.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "3138-BKYAV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 489.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 267.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0947-MUGVO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 1463.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 352.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "9944-HKVVB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 307.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 379.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "1907-UBQFC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.0, "Telco_Customer_Churn[TotalCharges]": 688.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 360.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5146-CBVOE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 1212.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 364.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "8584-KMVXD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 535.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 110.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5651-YLPRD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 1, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 2723.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 242.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8242-SOQUO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.0, "Telco_Customer_Churn[TotalCharges]": 392.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 243.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3733-LSYCE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 1114.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 450.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "9793-WECQC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 2192.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 429.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "5899-OUVKV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.0, "Telco_Customer_Churn[TotalCharges]": 2979.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 49.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2984-AFWNC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 293.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 155.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2761-OCIAX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 165.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 415.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8017-LXHFA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.0, "Telco_Customer_Churn[TotalCharges]": 2293.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 230.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5035-BVCXS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.0, "Telco_Customer_Churn[TotalCharges]": 866.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 17.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "6407-UTSLV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.0, "Telco_Customer_Churn[TotalCharges]": 163.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 224.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "5318-IXUZF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 87.0, "Telco_Customer_Churn[TotalCharges]": 183.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 119.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 3}, {"Telco_Customer_Churn[customerID]": "8496-EJAUI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.0, "Telco_Customer_Churn[TotalCharges]": 1424.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 96.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}, {"Telco_Customer_Churn[customerID]": "4143-HHPMK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 4338.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 340.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "0923-PNFUB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 0, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.0, "Telco_Customer_Churn[TotalCharges]": 247.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 222.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "3365-SAIGS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.0, "Telco_Customer_Churn[TotalCharges]": 1329.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 410.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "5989-PGKJB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 1340.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 86.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "8337-MSSXB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 1180.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 295.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2528-HFYZX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 1233.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 138.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "2135-DQWAQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 85.0, "Telco_Customer_Churn[TotalCharges]": 420.0, "Telco_Customer_Churn[Churn]": 0, "Telco_Customer_Churn[customerID]_stringindexer_transform": 62.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 1}, {"Telco_Customer_Churn[customerID]": "7548-SEPYI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": 0, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.0, "Telco_Customer_Churn[TotalCharges]": 512.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 398.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 0, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 1, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 1, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 0}, {"Telco_Customer_Churn[customerID]": "7503-QQRVF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": 1, "Telco_Customer_Churn[Dependents]": 0, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": 1, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": 1, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.0, "Telco_Customer_Churn[TotalCharges]": 1178.0, "Telco_Customer_Churn[Churn]": 1, "Telco_Customer_Churn[customerID]_stringindexer_transform": 253.0, "Telco_Customer_Churn[gender]_stringindexer_transform": 1, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": 0, "Telco_Customer_Churn[InternetService]_stringindexer_transform": 1, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": 0, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": 1, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": 0, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": 0, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": 0, "Telco_Customer_Churn[Contract]_stringindexer_transform": 0, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": 2}], "FE": [{"transformationsData": [{"feature_label": "Telco_Customer_Churn[customerID]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[cust..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[gender]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[gend..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Seni..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Part..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Depe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[tenu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Phon..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mult..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[InternetService]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Inte..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Devi..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tech..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[Contract]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Cont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Pape..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Paym..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tota..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Chur..."}, {"feature": "Telco_Customer_Churn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[cust..."}, {"feature": "Telco_Customer_Churn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[gend..."}, {"feature": "Telco_Customer_Churn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Mult..."}, {"feature": "Telco_Customer_Churn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Inte..."}, {"feature": "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"feature": "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"feature": "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Devi..."}, {"feature": "Telco_Customer_Churn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Tech..."}, {"feature": "Telco_Customer_Churn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"feature": "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"feature": "Telco_Customer_Churn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Cont..."}, {"feature": "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Paym..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Telco_Customer_Churn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "Telco_Customer_Churn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "Telco_Customer_Churn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "Telco_Customer_Churn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "Telco_Customer_Churn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "Telco_Customer_Churn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "Telco_Customer_Churn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "Telco_Customer_Churn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "Telco_Customer_Churn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "Telco_Customer_Churn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "Telco_Customer_Churn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "Telco_Customer_Churn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "Telco_Customer_Churn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "Telco_Customer_Churn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "Telco_Customer_Churn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "Telco_Customer_Churn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "Telco_Customer_Churn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "Telco_Customer_Churn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "Telco_Customer_Churn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "Telco_Customer_Churn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "Telco_Customer_Churn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "Telco_Customer_Churn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "Telco_Customer_Churn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}], "stageId": "64edfd7f5820f11829d9a72a", "FESamplePath": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a72a_AutoFE/part-00000-8e46bce4-e835-4799-ab92-d1842afee50b-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a72a_AutoFE/part-00000-8e46bce4-e835-4799-ab92-d1842afee50b-c000.csv", "originalcount": 7043, "graphdata": {"Telco_Customer_Churn[customerID]": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "Telco_Customer_Churn[gender]": {"label": ["Female", "Male"], "data": [258, 242]}, "Telco_Customer_Churn[SeniorCitizen]": {"label": ["1", "0"], "data": [102, 398]}, "Telco_Customer_Churn[Partner]": {"label": ["1", "0"], "data": [110, 390]}, "Telco_Customer_Churn[Dependents]": {"label": ["0", "1"], "data": [424, 76]}, "Telco_Customer_Churn[tenure]": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "Telco_Customer_Churn[PhoneService]": {"label": ["1", "0"], "data": [406, 94]}, "Telco_Customer_Churn[MultipleLines]": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "Telco_Customer_Churn[InternetService]": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "Telco_Customer_Churn[OnlineSecurity]": {"label": ["No"], "data": [500]}, "Telco_Customer_Churn[OnlineBackup]": {"label": ["No", "Yes"], "data": [313, 187]}, "Telco_Customer_Churn[DeviceProtection]": {"label": ["No"], "data": [500]}, "Telco_Customer_Churn[TechSupport]": {"label": ["No"], "data": [500]}, "Telco_Customer_Churn[StreamingTV]": {"label": ["No", "Yes"], "data": [389, 111]}, "Telco_Customer_Churn[StreamingMovies]": {"label": ["No", "Yes"], "data": [394, 106]}, "Telco_Customer_Churn[Contract]": {"label": ["Month-to-month"], "data": [500]}, "Telco_Customer_Churn[PaperlessBilling]": {"label": ["1", "0"], "data": [349, 151]}, "Telco_Customer_Churn[PaymentMethod]": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "Telco_Customer_Churn[MonthlyCharges]": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "Telco_Customer_Churn[TotalCharges]": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "Telco_Customer_Churn[Churn]": {"label": ["1", "0"], "data": [312, 188]}, "Telco_Customer_Churn[customerID]_stringindexer_transform": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "Telco_Customer_Churn[gender]_stringindexer_transform": {"label": ["0", "1"], "data": [258, 242]}, "Telco_Customer_Churn[MultipleLines]_stringindexer_transform": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "Telco_Customer_Churn[InternetService]_stringindexer_transform": {"label": ["1", "0"], "data": [239, 261]}, "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform": {"label": ["0"], "data": [500]}, "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform": {"label": ["0", "1"], "data": [313, 187]}, "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform": {"label": ["0"], "data": [500]}, "Telco_Customer_Churn[TechSupport]_stringindexer_transform": {"label": ["0"], "data": [500]}, "Telco_Customer_Churn[StreamingTV]_stringindexer_transform": {"label": ["0", "1"], "data": [389, 111]}, "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform": {"label": ["0", "1"], "data": [394, 106]}, "Telco_Customer_Churn[Contract]_stringindexer_transform": {"label": ["0"], "data": [500]}, "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "Telco_Customer_Churn[customerID]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[cust..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[gender]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[gend..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Seni..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Part..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Depe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[tenu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Phon..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mult..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[InternetService]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Inte..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Devi..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tech..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[Contract]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Cont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Pape..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Paym..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tota..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Chur..."}, {"feature": "Telco_Customer_Churn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[cust..."}, {"feature": "Telco_Customer_Churn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[gend..."}, {"feature": "Telco_Customer_Churn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Mult..."}, {"feature": "Telco_Customer_Churn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Inte..."}, {"feature": "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"feature": "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"feature": "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Devi..."}, {"feature": "Telco_Customer_Churn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Tech..."}, {"feature": "Telco_Customer_Churn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"feature": "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"feature": "Telco_Customer_Churn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Cont..."}, {"feature": "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Paym..."}], "message": "Successfully executed", "status": 1, "userid": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "autoFE_flag": true, "stageId": "64edfd7f5820f11829d9a72a", "FESamplePath": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a72a_AutoFE/part-00000-8e46bce4-e835-4799-ab92-d1842afee50b-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a72a_AutoFE/part-00000-8e46bce4-e835-4799-ab92-d1842afee50b-c000.csv", "samplecount": 500, "originalcount": 7043, "dataPercentage": "100", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "Telco_Customer_Churn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "Telco_Customer_Churn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "Telco_Customer_Churn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "Telco_Customer_Churn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "Telco_Customer_Churn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "Telco_Customer_Churn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "Telco_Customer_Churn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "Telco_Customer_Churn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "Telco_Customer_Churn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "Telco_Customer_Churn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "Telco_Customer_Churn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "Telco_Customer_Churn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "Telco_Customer_Churn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "Telco_Customer_Churn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "Telco_Customer_Churn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "Telco_Customer_Churn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "Telco_Customer_Churn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "Telco_Customer_Churn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "Telco_Customer_Churn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "Telco_Customer_Churn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "Telco_Customer_Churn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "Telco_Customer_Churn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "Telco_Customer_Churn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "Telco_Customer_Churn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "Telco_Customer_Churn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "Telco_Customer_Churn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "Telco_Customer_Churn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "Telco_Customer_Churn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}]}, "selectedFE": [{"transformationsData": [{"feature_label": "Telco_Customer_Churn[customerID]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[cust..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[gender]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[gend..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Seni..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Part..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Depe..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[tenu..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Phon..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mult..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[InternetService]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Inte..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Onli..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Devi..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tech..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Stre..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[Contract]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Cont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Pape..."}, {"transformationsData": [{"feature_label": "Telco_Customer_Churn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "Telco_Customer_Churn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Paym..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Mont..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "Telco_Customer_Churn[Tota..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "Telco_Customer_Churn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "Telco_Customer_Churn[Chur..."}], "autoFE_flag": true, "modeltrainingpercent": "100"}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]_stringindexer", "alias": "Telco_Customer_Churn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]_stringindexer", "alias": "Telco_Customer_Churn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]_stringindexer", "alias": "Telco_Customer_Churn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]_stringindexer", "alias": "Telco_Customer_Churn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]_stringindexer", "alias": "Telco_Customer_Churn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]_stringindexer", "alias": "Telco_Customer_Churn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]_stringindexer", "alias": "Telco_Customer_Churn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]_stringindexer", "alias": "Telco_Customer_Churn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]_stringindexer", "alias": "Telco_Customer_Churn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]_stringindexer", "alias": "Telco_Customer_Churn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]_stringindexer", "alias": "Telco_Customer_Churn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]_stringindexer", "alias": "Telco_Customer_Churn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]", "alias": "Telco_Customer_Churn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]", "alias": "Telco_Customer_Churn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]", "alias": "Telco_Customer_Churn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]", "alias": "Telco_Customer_Churn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]", "alias": "Telco_Customer_Churn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]", "alias": "Telco_Customer_Churn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]", "alias": "Telco_Customer_Churn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]", "alias": "Telco_Customer_Churn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]", "alias": "Telco_Customer_Churn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]", "alias": "Telco_Customer_Churn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]", "alias": "Telco_Customer_Churn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]", "alias": "Telco_Customer_Churn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-29 14:15:27.191000", "originalcount": 7043, "samplecount": 716, "samplefile": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a729/part-00000-7dd5e575-e4c9-4c28-8c46-8a33aa84d8d3-c000.csv", "joinSchema": [], "updated_at": "2023-08-29 14:15:27.195000", "__v": 0, "datacache": 0, "sampleData": [{"Telco_Customer_Churn[customerID]": "7206-GZCDC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.25, "Telco_Customer_Churn[TotalCharges]": 69.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8380-PEFPE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.65, "Telco_Customer_Churn[TotalCharges]": 71.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8309-IEYJD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.6, "Telco_Customer_Churn[TotalCharges]": 70.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9488-HGMJH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.15, "Telco_Customer_Churn[TotalCharges]": 71.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0968-GSIKN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.8, "Telco_Customer_Churn[TotalCharges]": 70.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3871-IKPYH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.1, "Telco_Customer_Churn[TotalCharges]": 69.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4603-JANFB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 69.85, "Telco_Customer_Churn[TotalCharges]": 69.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5376-DEQCP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.6, "Telco_Customer_Churn[TotalCharges]": 70.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3244-DCJWY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.25, "Telco_Customer_Churn[TotalCharges]": 70.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3413-BMNZE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.25, "Telco_Customer_Churn[TotalCharges]": 45.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8705-WZCYL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.8, "Telco_Customer_Churn[TotalCharges]": 44.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6982-SSHFK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.4, "Telco_Customer_Churn[TotalCharges]": 44.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2833-SLKDQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.05, "Telco_Customer_Churn[TotalCharges]": 45.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4237-RLAQD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.85, "Telco_Customer_Churn[TotalCharges]": 45.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1478-VPOAD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 43.8, "Telco_Customer_Churn[TotalCharges]": 43.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9828-AOQLM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.7, "Telco_Customer_Churn[TotalCharges]": 45.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5103-MHMHY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.95, "Telco_Customer_Churn[TotalCharges]": 45.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5692-FPTAH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.4, "Telco_Customer_Churn[TotalCharges]": 45.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7663-RGWBC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.15, "Telco_Customer_Churn[TotalCharges]": 44.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4855-SNKMY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.1, "Telco_Customer_Churn[TotalCharges]": 44.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2082-CEFLT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 45.6, "Telco_Customer_Churn[TotalCharges]": 45.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4361-JEIVL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.4, "Telco_Customer_Churn[TotalCharges]": 44.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3276-HDUEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.05, "Telco_Customer_Churn[TotalCharges]": 75.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1157-BQCUW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.95, "Telco_Customer_Churn[TotalCharges]": 74.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9787-XVQIU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.3, "Telco_Customer_Churn[TotalCharges]": 75.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0248-IPDFW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.1, "Telco_Customer_Churn[TotalCharges]": 50.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3746-EUBYR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.6, "Telco_Customer_Churn[TotalCharges]": 74.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0023-HGHWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 25.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2862-PFNIK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.7, "Telco_Customer_Churn[TotalCharges]": 24.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4367-NHWMM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.9, "Telco_Customer_Churn[TotalCharges]": 24.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3551-HUAZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.4, "Telco_Customer_Churn[TotalCharges]": 74.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0616-ATFGB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 25.05, "Telco_Customer_Churn[TotalCharges]": 25.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1740-CSDJP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 35.25, "Telco_Customer_Churn[TotalCharges]": 35.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2004-OCQXK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.95, "Telco_Customer_Churn[TotalCharges]": 81.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9124-LHCJQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 85.45, "Telco_Customer_Churn[TotalCharges]": 85.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4614-NUVZD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.1, "Telco_Customer_Churn[TotalCharges]": 81.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3063-QFSZL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.4, "Telco_Customer_Churn[TotalCharges]": 55.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5909-ECHUI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.25, "Telco_Customer_Churn[TotalCharges]": 56.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7439-DKZTW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 80.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3988-RQIXO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.3, "Telco_Customer_Churn[TotalCharges]": 91.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5378-IKEEG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 35.75, "Telco_Customer_Churn[TotalCharges]": 35.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7577-SWIFR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.25, "Telco_Customer_Churn[TotalCharges]": 89.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9507-EXLTT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 79.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8665-UTDHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.2, "Telco_Customer_Churn[TotalCharges]": 30.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6905-NIQIN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.65, "Telco_Customer_Churn[TotalCharges]": 50.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7595-EUIVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.8, "Telco_Customer_Churn[TotalCharges]": 75.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5054-IEXZT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.35, "Telco_Customer_Churn[TotalCharges]": 75.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5073-WXOYN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.8, "Telco_Customer_Churn[TotalCharges]": 3027.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1636-NTNCO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.95, "Telco_Customer_Churn[TotalCharges]": 207.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3665-JATSN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 39.7, "Telco_Customer_Churn[TotalCharges]": 710.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5438-QMDDL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.8, "Telco_Customer_Churn[TotalCharges]": 1130.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4130-MZLCC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.55, "Telco_Customer_Churn[TotalCharges]": 244.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8229-MYEJZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.2, "Telco_Customer_Churn[TotalCharges]": 498.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3391-JSQEW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.15, "Telco_Customer_Churn[TotalCharges]": 2058.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6637-KYRCV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.5, "Telco_Customer_Churn[TotalCharges]": 167.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1322-AGOQM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.3, "Telco_Customer_Churn[TotalCharges]": 1380.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7636-OWBPG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 29.35, "Telco_Customer_Churn[TotalCharges]": 381.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5402-HTOTQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.3, "Telco_Customer_Churn[TotalCharges]": 875.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5816-SCGFC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.3, "Telco_Customer_Churn[TotalCharges]": 419.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1114-CENIM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.0, "Telco_Customer_Churn[TotalCharges]": 3092.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2843-CQMEG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.7, "Telco_Customer_Churn[TotalCharges]": 1218.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7916-VCCPB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.25, "Telco_Customer_Churn[TotalCharges]": 1195.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1215-FIGMP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 89.9, "Telco_Customer_Churn[TotalCharges]": 5450.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1307-TVUFB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 3344.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1323-OOEPC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.4, "Telco_Customer_Churn[TotalCharges]": 5149.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5453-AXEPF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.5, "Telco_Customer_Churn[TotalCharges]": 1336.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8490-BXHEO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 1411.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4686-UXDML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.85, "Telco_Customer_Churn[TotalCharges]": 1992.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3811-VBYBZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 99.8, "Telco_Customer_Churn[TotalCharges]": 673.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6298-QDFNH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.35, "Telco_Customer_Churn[TotalCharges]": 1730.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8182-BJDSI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.95, "Telco_Customer_Churn[TotalCharges]": 2625.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8922-LIEGH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.7, "Telco_Customer_Churn[TotalCharges]": 2187.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3481-JHUZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.25, "Telco_Customer_Churn[TotalCharges]": 3439.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3420-YJLQT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.55, "Telco_Customer_Churn[TotalCharges]": 151.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9600-NAXZN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.4, "Telco_Customer_Churn[TotalCharges]": 4528.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4257-GAESD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 45.0, "Telco_Customer_Churn[TotalCharges]": 298.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5543-QDCRY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.4, "Telco_Customer_Churn[TotalCharges]": 234.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8160-HOWOX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 66.85, "Telco_Customer_Churn[TotalCharges]": 458.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6429-SHBCB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 69.6, "Telco_Customer_Churn[TotalCharges]": 1394.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7890-VYYWG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 36.45, "Telco_Customer_Churn[TotalCharges]": 93.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8096-LOIST", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.2, "Telco_Customer_Churn[TotalCharges]": 1093.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1261-FWTTE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 34.65, "Telco_Customer_Churn[TotalCharges]": 768.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2720-FVBQP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 48.95, "Telco_Customer_Churn[TotalCharges]": 273.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8601-QACRS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 50.6, "Telco_Customer_Churn[TotalCharges]": 249.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0096-BXERS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.35, "Telco_Customer_Churn[TotalCharges]": 314.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1310-QRITU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.3, "Telco_Customer_Churn[TotalCharges]": 913.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6345-HOVES", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.05, "Telco_Customer_Churn[TotalCharges]": 852.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7876-BEUTG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 48.8, "Telco_Customer_Churn[TotalCharges]": 720.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0999-QXNSA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.75, "Telco_Customer_Churn[TotalCharges]": 344.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1125-SNVCK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 43.8, "Telco_Customer_Churn[TotalCharges]": 2106.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3580-REOAC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.85, "Telco_Customer_Churn[TotalCharges]": 435.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2637-FKFSY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 46.1, "Telco_Customer_Churn[TotalCharges]": 130.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4061-UKJWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.45, "Telco_Customer_Churn[TotalCharges]": 141.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5968-VXZLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 46.6, "Telco_Customer_Churn[TotalCharges]": 87.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3470-BTGQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 45.65, "Telco_Customer_Churn[TotalCharges]": 985.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5651-CPDND", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 46.0, "Telco_Customer_Churn[TotalCharges]": 492.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0374-IOEGQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 44.6, "Telco_Customer_Churn[TotalCharges]": 122.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3874-EQOEP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 655.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6551-GNYDG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.9, "Telco_Customer_Churn[TotalCharges]": 1152.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8519-IMDHU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.6, "Telco_Customer_Churn[TotalCharges]": 1345.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5373-SFODM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.25, "Telco_Customer_Churn[TotalCharges]": 3132.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0148-DCDOS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.7, "Telco_Customer_Churn[TotalCharges]": 2362.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6175-IRFIT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 78.75, "Telco_Customer_Churn[TotalCharges]": 426.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5271-DBYSJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.15, "Telco_Customer_Churn[TotalCharges]": 827.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9812-GHVRI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.85, "Telco_Customer_Churn[TotalCharges]": 3532.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3585-ISXZP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.65, "Telco_Customer_Churn[TotalCharges]": 778.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5307-DZCVC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.95, "Telco_Customer_Churn[TotalCharges]": 2628.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8212-CRQXP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.0, "Telco_Customer_Churn[TotalCharges]": 1706.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2656-FMOKZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 74.45, "Telco_Customer_Churn[TotalCharges]": 1145.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5652-MSDEY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.75, "Telco_Customer_Churn[TotalCharges]": 777.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9540-JYROE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 70.1, "Telco_Customer_Churn[TotalCharges]": 551.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2476-YGEFM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 76.0, "Telco_Customer_Churn[TotalCharges]": 2215.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3755-JBMNH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.8, "Telco_Customer_Churn[TotalCharges]": 1167.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9943-VSZUV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.7, "Telco_Customer_Churn[TotalCharges]": 5060.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9389-ACWBI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 69.95, "Telco_Customer_Churn[TotalCharges]": 320.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9850-OWRHQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 74.1, "Telco_Customer_Churn[TotalCharges]": 228.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4115-NZRKS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.15, "Telco_Customer_Churn[TotalCharges]": 574.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0093-EXYQL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.55, "Telco_Customer_Churn[TotalCharges]": 3673.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6319-IEJWJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.2, "Telco_Customer_Churn[TotalCharges]": 1776.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0187-QSXOE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.0, "Telco_Customer_Churn[TotalCharges]": 605.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9837-BMCLM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.5, "Telco_Customer_Churn[TotalCharges]": 242.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1678-FYZOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.4, "Telco_Customer_Churn[TotalCharges]": 244.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9689-PTNPG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.25, "Telco_Customer_Churn[TotalCharges]": 144.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3191-CSNMG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.7, "Telco_Customer_Churn[TotalCharges]": 239.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9450-TRJUU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.15, "Telco_Customer_Churn[TotalCharges]": 2848.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3158-MOERK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.0, "Telco_Customer_Churn[TotalCharges]": 174.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7024-OHCCK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.85, "Telco_Customer_Churn[TotalCharges]": 170.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9809-IMGCQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.7, "Telco_Customer_Churn[TotalCharges]": 2082.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6198-RTPMF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.6, "Telco_Customer_Churn[TotalCharges]": 1579.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4424-TKOPW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.85, "Telco_Customer_Churn[TotalCharges]": 196.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3990-QYKBE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.5, "Telco_Customer_Churn[TotalCharges]": 3473.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3714-NTNFO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.5, "Telco_Customer_Churn[TotalCharges]": 3906.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2362-IBOOY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.75, "Telco_Customer_Churn[TotalCharges]": 3050.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2642-DTVCO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.05, "Telco_Customer_Churn[TotalCharges]": 746.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3223-WZWJM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 83.95, "Telco_Customer_Churn[TotalCharges]": 2254.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4846-WHAFZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.5, "Telco_Customer_Churn[TotalCharges]": 2868.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9903-LYSAB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.15, "Telco_Customer_Churn[TotalCharges]": 1305.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0265-EDXBD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 32, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 2303.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5956-VKDTT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.35, "Telco_Customer_Churn[TotalCharges]": 334.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5879-SESNB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.25, "Telco_Customer_Churn[TotalCharges]": 888.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4547-LYTDD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.65, "Telco_Customer_Churn[TotalCharges]": 1194.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8443-ZRDBZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.05, "Telco_Customer_Churn[TotalCharges]": 318.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9306-CPCBC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.25, "Telco_Customer_Churn[TotalCharges]": 210.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3519-ZKXGG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.85, "Telco_Customer_Churn[TotalCharges]": 256.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2077-MPJQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 75.4, "Telco_Customer_Churn[TotalCharges]": 533.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8270-RKSAP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.5, "Telco_Customer_Churn[TotalCharges]": 597.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2884-GBPFB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.3, "Telco_Customer_Churn[TotalCharges]": 2416.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8835-VSDSE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.7, "Telco_Customer_Churn[TotalCharges]": 141.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3884-HCSWG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 70.0, "Telco_Customer_Churn[TotalCharges]": 1144.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7112-OPOTK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 33, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 68.25, "Telco_Customer_Churn[TotalCharges]": 2171.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5168-MSWXT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.75, "Telco_Customer_Churn[TotalCharges]": 759.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6896-SRVYQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.85, "Telco_Customer_Churn[TotalCharges]": 3122.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4285-GYRQC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.25, "Telco_Customer_Churn[TotalCharges]": 587.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1475-VWVDO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 490.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9747-DDZOS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 73.5, "Telco_Customer_Churn[TotalCharges]": 73.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4585-HETAI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 73.75, "Telco_Customer_Churn[TotalCharges]": 325.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3192-LNKRK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 2909.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6996-KNSML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.9, "Telco_Customer_Churn[TotalCharges]": 74.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4879-GZLFH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 92.15, "Telco_Customer_Churn[TotalCharges]": 3875.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6060-DRTNL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 84.85, "Telco_Customer_Churn[TotalCharges]": 415.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1918-ZBFQJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.25, "Telco_Customer_Churn[TotalCharges]": 1111.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8563-OYMQY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.95, "Telco_Customer_Churn[TotalCharges]": 1612.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4248-HCETZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 79.65, "Telco_Customer_Churn[TotalCharges]": 2365.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2603-HVKCG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.4, "Telco_Customer_Churn[TotalCharges]": 3143.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4465-VDKIQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 77.8, "Telco_Customer_Churn[TotalCharges]": 1358.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9688-YGXVR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.15, "Telco_Customer_Churn[TotalCharges]": 3973.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9526-JAWYF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.8, "Telco_Customer_Churn[TotalCharges]": 2335.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5348-CAGXB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.55, "Telco_Customer_Churn[TotalCharges]": 1021.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5016-IBERQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.25, "Telco_Customer_Churn[TotalCharges]": 1968.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1579-KLYDT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.45, "Telco_Customer_Churn[TotalCharges]": 593.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9885-AIBVB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.8, "Telco_Customer_Churn[TotalCharges]": 2440.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1170-SASML", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.4, "Telco_Customer_Churn[TotalCharges]": 5869.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2911-WDXMV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.55, "Telco_Customer_Churn[TotalCharges]": 1406.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4559-UWIHT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 82.65, "Telco_Customer_Churn[TotalCharges]": 1185.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4927-WWOOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.45, "Telco_Customer_Churn[TotalCharges]": 171.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8623-TMRBY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.2, "Telco_Customer_Churn[TotalCharges]": 4146.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6137-NICCO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 94.05, "Telco_Customer_Churn[TotalCharges]": 518.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7547-EKNFS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.25, "Telco_Customer_Churn[TotalCharges]": 3959.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0023-XUOPT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.1, "Telco_Customer_Churn[TotalCharges]": 1215.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1173-XZPYF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 89.2, "Telco_Customer_Churn[TotalCharges]": 990.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4070-OKWVH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.6, "Telco_Customer_Churn[TotalCharges]": 5025.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1173-NOEYG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.15, "Telco_Customer_Churn[TotalCharges]": 2423.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0504-HHAPI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.3, "Telco_Customer_Churn[TotalCharges]": 2467.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6075-SLNIL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.1, "Telco_Customer_Churn[TotalCharges]": 3691.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0979-PHULV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.45, "Telco_Customer_Churn[TotalCharges]": 7007.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3005-TYFRD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.65, "Telco_Customer_Churn[TotalCharges]": 5676.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9547-ITEFG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 102.6, "Telco_Customer_Churn[TotalCharges]": 897.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0093-XWZFY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 104.5, "Telco_Customer_Churn[TotalCharges]": 4036.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0434-CSFON", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.5, "Telco_Customer_Churn[TotalCharges]": 4707.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3606-TWKGI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 106.9, "Telco_Customer_Churn[TotalCharges]": 1364.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0781-LKXBR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.5, "Telco_Customer_Churn[TotalCharges]": 918.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4822-RVYBB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.6, "Telco_Customer_Churn[TotalCharges]": 819.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6651-AZVTJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 99.8, "Telco_Customer_Churn[TotalCharges]": 4872.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7901-TBKJX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.05, "Telco_Customer_Churn[TotalCharges]": 5594.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4021-RQSNY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.5, "Telco_Customer_Churn[TotalCharges]": 3004.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4433-JCGCG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.0, "Telco_Customer_Churn[TotalCharges]": 4680.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4553-DVPZG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.35, "Telco_Customer_Churn[TotalCharges]": 6164.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5502-RLUYV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.95, "Telco_Customer_Churn[TotalCharges]": 7446.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6116-RFVHN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.45, "Telco_Customer_Churn[TotalCharges]": 3414.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4735-ASGMA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.35, "Telco_Customer_Churn[TotalCharges]": 2515.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2080-CAZNM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 104.4, "Telco_Customer_Churn[TotalCharges]": 4133.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7233-DRTRF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 102.4, "Telco_Customer_Churn[TotalCharges]": 6444.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6646-VRFOL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.85, "Telco_Customer_Churn[TotalCharges]": 5485.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4078-SAYYN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.75, "Telco_Customer_Churn[TotalCharges]": 1129.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2011-TRQYE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 33.5, "Telco_Customer_Churn[TotalCharges]": 600.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4280-DLSHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.75, "Telco_Customer_Churn[TotalCharges]": 445.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1357-MVDOZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.65, "Telco_Customer_Churn[TotalCharges]": 683.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8348-HFYIV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.25, "Telco_Customer_Churn[TotalCharges]": 90.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3677-IYRBF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 30.4, "Telco_Customer_Churn[TotalCharges]": 78.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7410-KTVFV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.55, "Telco_Customer_Churn[TotalCharges]": 878.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7743-EXURX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.05, "Telco_Customer_Churn[TotalCharges]": 415.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7240-ETPTR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 48.75, "Telco_Customer_Churn[TotalCharges]": 442.2, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8992-JQYUN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.35, "Telco_Customer_Churn[TotalCharges]": 50.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0486-HECZI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 96.75, "Telco_Customer_Churn[TotalCharges]": 5238.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5299-RULOA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 100.25, "Telco_Customer_Churn[TotalCharges]": 1064.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5091-HFAZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 91.15, "Telco_Customer_Churn[TotalCharges]": 168.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6356-ELRKD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.6, "Telco_Customer_Churn[TotalCharges]": 95.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0952-KMEEH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 98.15, "Telco_Customer_Churn[TotalCharges]": 1230.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6645-MXQJT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 97.1, "Telco_Customer_Churn[TotalCharges]": 184.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4831-EOBFE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.65, "Telco_Customer_Churn[TotalCharges]": 2649.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1482-OXZSY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 100.4, "Telco_Customer_Churn[TotalCharges]": 2936.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9658-WYUFB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 17, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.4, "Telco_Customer_Churn[TotalCharges]": 1617.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4325-NFSKC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.6, "Telco_Customer_Churn[TotalCharges]": 1660.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5287-QWLKY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.1, "Telco_Customer_Churn[TotalCharges]": 7548.1, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9069-LGEUL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.95, "Telco_Customer_Churn[TotalCharges]": 1406.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0730-KOAVE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 94.3, "Telco_Customer_Churn[TotalCharges]": 2679.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3062-ICYZQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 93.8, "Telco_Customer_Churn[TotalCharges]": 4539.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4524-QCSSM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 44.65, "Telco_Customer_Churn[TotalCharges]": 1156.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4760-THGOT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 43, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 94.1, "Telco_Customer_Churn[TotalCharges]": 4107.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7634-WSWDB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 38.5, "Telco_Customer_Churn[TotalCharges]": 330.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2988-GBIVW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.85, "Telco_Customer_Churn[TotalCharges]": 6470.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0637-UBJRP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 1095.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4824-GUCBY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 81.7, "Telco_Customer_Churn[TotalCharges]": 1820.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9948-YPTDG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 79.45, "Telco_Customer_Churn[TotalCharges]": 3013.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8624-GIOUT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.75, "Telco_Customer_Churn[TotalCharges]": 2934.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5353-WILCI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 56.05, "Telco_Customer_Churn[TotalCharges]": 1522.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1575-KRZZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 55.2, "Telco_Customer_Churn[TotalCharges]": 220.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1928-BXYIV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 61.15, "Telco_Customer_Churn[TotalCharges]": 61.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2676-OXPPQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.7, "Telco_Customer_Churn[TotalCharges]": 335.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4833-QTJNO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.85, "Telco_Customer_Churn[TotalCharges]": 5588.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3541-ZNUHK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 85.1, "Telco_Customer_Churn[TotalCharges]": 4600.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9577-WJVCQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 54.45, "Telco_Customer_Churn[TotalCharges]": 3687.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5619-PTMIK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 53.1, "Telco_Customer_Churn[TotalCharges]": 2459.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5133-VRSAB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.35, "Telco_Customer_Churn[TotalCharges]": 216.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5151-HQRDG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 55.05, "Telco_Customer_Churn[TotalCharges]": 2030.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2956-GGUCQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 78.85, "Telco_Customer_Churn[TotalCharges]": 1772.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2533-TIBIX", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.2, "Telco_Customer_Churn[TotalCharges]": 469.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9526-BIHHD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.7, "Telco_Customer_Churn[TotalCharges]": 29.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9626-WEQRM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 29.15, "Telco_Customer_Churn[TotalCharges]": 110.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0032-PGELS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 30.5, "Telco_Customer_Churn[TotalCharges]": 30.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6390-DSAZX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 73.6, "Telco_Customer_Churn[TotalCharges]": 73.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8695-WDYEA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 51.25, "Telco_Customer_Churn[TotalCharges]": 51.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9496-IVVRP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 51.0, "Telco_Customer_Churn[TotalCharges]": 581.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9644-UMGQA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 49.15, "Telco_Customer_Churn[TotalCharges]": 295.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0384-RVBPI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 64.4, "Telco_Customer_Churn[TotalCharges]": 1398.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5766-XQXMQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 68.85, "Telco_Customer_Churn[TotalCharges]": 1970.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6873-UDNLD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 67.45, "Telco_Customer_Churn[TotalCharges]": 2731.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1852-XEMDW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 65.05, "Telco_Customer_Churn[TotalCharges]": 1427.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5236-XMZJY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.65, "Telco_Customer_Churn[TotalCharges]": 2536.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0289-IVARM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 60.55, "Telco_Customer_Churn[TotalCharges]": 1982.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4712-AUQZO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 33.6, "Telco_Customer_Churn[TotalCharges]": 550.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8221-EQDGL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 61.0, "Telco_Customer_Churn[TotalCharges]": 2130.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6067-NGCEU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.05, "Telco_Customer_Churn[TotalCharges]": 7107.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2684-EIWEO", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 91.7, "Telco_Customer_Churn[TotalCharges]": 2758.15, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6416-YJTTB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.5, "Telco_Customer_Churn[TotalCharges]": 795.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8189-HBVRW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.8, "Telco_Customer_Churn[TotalCharges]": 4921.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7181-BQYBV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 102.45, "Telco_Customer_Churn[TotalCharges]": 102.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5609-IMCGG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.35, "Telco_Customer_Churn[TotalCharges]": 1302.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2479-BRAMR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 83.75, "Telco_Customer_Churn[TotalCharges]": 3273.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0265-PSUAE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 100.7, "Telco_Customer_Churn[TotalCharges]": 1522.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0365-TRTPY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 91.2, "Telco_Customer_Churn[TotalCharges]": 3382.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2455-USLMV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.75, "Telco_Customer_Churn[TotalCharges]": 2613.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2133-TSRRM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 34, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.35, "Telco_Customer_Churn[TotalCharges]": 3688.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0523-VNGTF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 50.5, "Telco_Customer_Churn[TotalCharges]": 2566.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7351-MHQVU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.95, "Telco_Customer_Churn[TotalCharges]": 307.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9754-CLVZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 26, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 38.85, "Telco_Customer_Churn[TotalCharges]": 1025.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9501-UKKNL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 51.7, "Telco_Customer_Churn[TotalCharges]": 3005.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4430-UZIPO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 36.85, "Telco_Customer_Churn[TotalCharges]": 108.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7074-STDCN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 39, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 40.6, "Telco_Customer_Churn[TotalCharges]": 1494.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9572-WUKSB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 29.9, "Telco_Customer_Churn[TotalCharges]": 92.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5136-RGMZO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 31, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 71.05, "Telco_Customer_Churn[TotalCharges]": 2168.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5356-CSVSQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.6, "Telco_Customer_Churn[TotalCharges]": 174.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5924-IFQTT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 13, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.8, "Telco_Customer_Churn[TotalCharges]": 930.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7925-PNRGI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 81.3, "Telco_Customer_Churn[TotalCharges]": 3541.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4489-SNOJF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 72.25, "Telco_Customer_Churn[TotalCharges]": 2568.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2257-BOVXD", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 66.6, "Telco_Customer_Churn[TotalCharges]": 979.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2475-MROZF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.0, "Telco_Customer_Churn[TotalCharges]": 2852.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5240-CAOYT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 57, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 87.55, "Telco_Customer_Churn[TotalCharges]": 4884.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5433-KYGHE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 86.0, "Telco_Customer_Churn[TotalCharges]": 1164.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6234-PFPXL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.9, "Telco_Customer_Churn[TotalCharges]": 2234.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1216-BGTSP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 108.45, "Telco_Customer_Churn[TotalCharges]": 4964.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2522-AHJXR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 109.45, "Telco_Customer_Churn[TotalCharges]": 6572.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3737-GCSPV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.2, "Telco_Customer_Churn[TotalCharges]": 1222.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2931-SVLTV", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 40, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 110.1, "Telco_Customer_Churn[TotalCharges]": 4469.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2302-ANTDP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 117.45, "Telco_Customer_Churn[TotalCharges]": 5438.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3898-GUYTS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 97.05, "Telco_Customer_Churn[TotalCharges]": 4385.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9572-MTILT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 106.75, "Telco_Customer_Churn[TotalCharges]": 6252.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2279-AXJJK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.65, "Telco_Customer_Churn[TotalCharges]": 5088.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5827-MWCZK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.95, "Telco_Customer_Churn[TotalCharges]": 5432.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6284-AHOOQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.5, "Telco_Customer_Churn[TotalCharges]": 1910.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4716-HHKQH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 107.05, "Telco_Customer_Churn[TotalCharges]": 2172.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1450-GALXR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 98.5, "Telco_Customer_Churn[TotalCharges]": 1058.25, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6599-RCLCJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 109.55, "Telco_Customer_Churn[TotalCharges]": 5124.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1320-REHCS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 110.75, "Telco_Customer_Churn[TotalCharges]": 5832.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9168-INPSZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 44, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 104.15, "Telco_Customer_Churn[TotalCharges]": 4495.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2357-COQEK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 28, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 103.3, "Telco_Customer_Churn[TotalCharges]": 2890.65, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2027-WKXMW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 108.75, "Telco_Customer_Churn[TotalCharges]": 6871.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9578-FOMUK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 24.8, "Telco_Customer_Churn[TotalCharges]": 324.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8896-BQTTI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 25.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6509-TSGWN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 37, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 26.45, "Telco_Customer_Churn[TotalCharges]": 911.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9546-KDTRB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 19, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.7, "Telco_Customer_Churn[TotalCharges]": 465.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7803-XOCCZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.05, "Telco_Customer_Churn[TotalCharges]": 4326.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1410-RSCMR", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.35, "Telco_Customer_Churn[TotalCharges]": 515.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0207-MDKNV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 105.1, "Telco_Customer_Churn[TotalCharges]": 1582.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0701-TJSEF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 68.25, "Telco_Customer_Churn[TotalCharges]": 576.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1356-MKYSK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 78.65, "Telco_Customer_Churn[TotalCharges]": 483.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7143-BQIBA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.25, "Telco_Customer_Churn[TotalCharges]": 612.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4741-WWJQZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 80.15, "Telco_Customer_Churn[TotalCharges]": 194.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1871-MOWRM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.85, "Telco_Customer_Churn[TotalCharges]": 866.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5208-HFSBT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 55.05, "Telco_Customer_Churn[TotalCharges]": 102.75, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1564-HJUVY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 63.75, "Telco_Customer_Churn[TotalCharges]": 226.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7691-KGKGP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 65.0, "Telco_Customer_Churn[TotalCharges]": 3363.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5206-XZZQI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 80.6, "Telco_Customer_Churn[TotalCharges]": 4348.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8118-TJAFG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.5, "Telco_Customer_Churn[TotalCharges]": 906.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8266-VBFQL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 90.4, "Telco_Customer_Churn[TotalCharges]": 356.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7319-VENRZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 64.3, "Telco_Customer_Churn[TotalCharges]": 445.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0125-LZQXK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 101.35, "Telco_Customer_Churn[TotalCharges]": 1553.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8640-SDGKB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 74.4, "Telco_Customer_Churn[TotalCharges]": 299.7, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6204-IEUXJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.1, "Telco_Customer_Churn[TotalCharges]": 217.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7295-JOMMD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.1, "Telco_Customer_Churn[TotalCharges]": 396.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3629-WEAAM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 64.1, "Telco_Customer_Churn[TotalCharges]": 504.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5309-TAIKL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.8, "Telco_Customer_Churn[TotalCharges]": 418.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5701-YVSVF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 11, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 82.9, "Telco_Customer_Churn[TotalCharges]": 880.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8679-JOEVF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 59.4, "Telco_Customer_Churn[TotalCharges]": 1023.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "5949-EBSQK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.45, "Telco_Customer_Churn[TotalCharges]": 229.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "6034-YMTOB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.65, "Telco_Customer_Churn[TotalCharges]": 399.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0013-EXCHZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 83.9, "Telco_Customer_Churn[TotalCharges]": 267.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "9210-IAHGH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 7, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.75, "Telco_Customer_Churn[TotalCharges]": 450.8, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3914-FDRHP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.25, "Telco_Customer_Churn[TotalCharges]": 770.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5688-KZTSN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 20.0, "Telco_Customer_Churn[TotalCharges]": 288.05, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1577-HKTFG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.65, "Telco_Customer_Churn[TotalCharges]": 655.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0114-RSRRW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 10, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 187.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4623-ZKHLY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 22, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 471.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7787-BNTZM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 130.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8780-RSYYU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 532.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5562-YJQGT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.35, "Telco_Customer_Churn[TotalCharges]": 35.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9970-QBCDA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.7, "Telco_Customer_Churn[TotalCharges]": 129.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6469-QJKZW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 4, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 91.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0787-LHDYT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.6, "Telco_Customer_Churn[TotalCharges]": 330.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8573-CGOCC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 294.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9837-FWLCH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 239.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9063-ZGTUY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1182.55, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "4083-EUGRJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.25, "Telco_Customer_Churn[TotalCharges]": 178.5, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2732-ISEZX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 5, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.5, "Telco_Customer_Churn[TotalCharges]": 104.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8681-ICONS", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.65, "Telco_Customer_Churn[TotalCharges]": 654.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4986-MXSFP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.0, "Telco_Customer_Churn[TotalCharges]": 40.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9364-YKUVW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 15, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 309.4, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1498-DQNRX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 29, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 573.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0519-DRGTI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 20, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.35, "Telco_Customer_Churn[TotalCharges]": 442.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1755-RMCXH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 40.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7521-YXVZY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 58.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2717-HVIZY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.05, "Telco_Customer_Churn[TotalCharges]": 163.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1760-CAZHT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 25, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.8, "Telco_Customer_Churn[TotalCharges]": 460.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0030-FNXPP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 57.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1051-GEJLJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.5, "Telco_Customer_Churn[TotalCharges]": 27.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8942-DBMHZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 255.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3750-RNQKR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 246.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1796-JANOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 38.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0310-VQXAM", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 9, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.85, "Telco_Customer_Churn[TotalCharges]": 178.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2308-STERM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 2, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 61.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1539-LNKHM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 266.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9770-LXDBK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 3, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 63.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7302-ZHMHP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.15, "Telco_Customer_Churn[TotalCharges]": 19.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7989-CHGTL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.6, "Telco_Customer_Churn[TotalCharges]": 19.6, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3030-ZKIWL", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.05, "Telco_Customer_Churn[TotalCharges]": 20.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7243-LCGGZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.9, "Telco_Customer_Churn[TotalCharges]": 20.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0673-IGUQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 20.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8974-OVACP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 20.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8073-IJDCM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 20.3, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1963-VAUKV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 20.4, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "2480-JZOSN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 20.65, "Telco_Customer_Churn[TotalCharges]": 20.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4760-XOHVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 19.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "1098-TDVUQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.25, "Telco_Customer_Churn[TotalCharges]": 19.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1194-SPVSP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.65, "Telco_Customer_Churn[TotalCharges]": 19.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9174-FKWZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.45, "Telco_Customer_Churn[TotalCharges]": 19.45, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7853-WNZSY", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 19.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9374-YOLBJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.25, "Telco_Customer_Churn[TotalCharges]": 19.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2273-QCKXA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 49.05, "Telco_Customer_Churn[TotalCharges]": 49.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9732-KPKBW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 1, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Month-to-month", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 53.95, "Telco_Customer_Churn[TotalCharges]": 53.95, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "3192-NQECA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 110.0, "Telco_Customer_Churn[TotalCharges]": 7611.85, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7317-GGVPB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 108.6, "Telco_Customer_Churn[TotalCharges]": 7690.9, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "0607-DAAHE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 53, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.75, "Telco_Customer_Churn[TotalCharges]": 1052.35, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "7359-SSBJK", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 64, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.2, "Telco_Customer_Churn[TotalCharges]": 4481.0, "Telco_Customer_Churn[Churn]": true}, {"Telco_Customer_Churn[customerID]": "8089-UZWLX", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 104.05, "Telco_Customer_Churn[TotalCharges]": 7413.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0707-HOVVN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.5, "Telco_Customer_Churn[TotalCharges]": 5212.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7515-LODFU", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.3, "Telco_Customer_Churn[TotalCharges]": 1356.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0201-MIBOL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 1, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 102.4, "Telco_Customer_Churn[TotalCharges]": 6471.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2996-XAUVF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 40.05, "Telco_Customer_Churn[TotalCharges]": 2799.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1139-WUOAH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 57, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 53.35, "Telco_Customer_Churn[TotalCharges]": 3090.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4891-NLUBA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.45, "Telco_Customer_Churn[TotalCharges]": 3751.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0230-WEQUW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 56.6, "Telco_Customer_Churn[TotalCharges]": 3789.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4472-LVYGI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 0, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 52.55, "Telco_Customer_Churn[TotalCharges]": null, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0895-UADGO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 8, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 44.55, "Telco_Customer_Churn[TotalCharges]": 343.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2773-MADBQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 36, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 53.1, "Telco_Customer_Churn[TotalCharges]": 1901.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9885-MFVSU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 35, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 46.35, "Telco_Customer_Churn[TotalCharges]": 1662.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6505-OZNPG", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 63.4, "Telco_Customer_Churn[TotalCharges]": 348.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1194-BHJYC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 62.15, "Telco_Customer_Churn[TotalCharges]": 3778.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0774-RMNUW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.7, "Telco_Customer_Churn[TotalCharges]": 4122.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4940-KHCWD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": false, "Telco_Customer_Churn[MultipleLines]": "No phone service", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 37.7, "Telco_Customer_Churn[TotalCharges]": 2288.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7639-LIAYI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.75, "Telco_Customer_Churn[TotalCharges]": 4217.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4500-HKANN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 59.7, "Telco_Customer_Churn[TotalCharges]": 1414.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9769-TSBZE", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 66.0, "Telco_Customer_Churn[TotalCharges]": 4891.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8591-TKMZH", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 111.1, "Telco_Customer_Churn[TotalCharges]": 6555.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8630-QSGXK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 51, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 75.2, "Telco_Customer_Churn[TotalCharges]": 3901.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2775-SEFEE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 0, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 61.9, "Telco_Customer_Churn[TotalCharges]": null, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6691-CCIHA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 84.95, "Telco_Customer_Churn[TotalCharges]": 5150.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7014-ZZXAW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.25, "Telco_Customer_Churn[TotalCharges]": 1732.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1982-FEBTD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.6, "Telco_Customer_Churn[TotalCharges]": 514.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8780-IHCRN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.65, "Telco_Customer_Churn[TotalCharges]": 1574.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9337-SRRNI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.3, "Telco_Customer_Churn[TotalCharges]": 1673.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3768-VHXQO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.85, "Telco_Customer_Churn[TotalCharges]": 1583.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8148-NLEGT", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 22.95, "Telco_Customer_Churn[TotalCharges]": 1014.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8606-OEGQZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.3, "Telco_Customer_Churn[TotalCharges]": 454.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5846-ABOBJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.45, "Telco_Customer_Churn[TotalCharges]": 1730.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0394-YONDK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.15, "Telco_Customer_Churn[TotalCharges]": 1790.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0485-ZBSLN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.75, "Telco_Customer_Churn[TotalCharges]": 1715.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6010-DDPPW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 25.15, "Telco_Customer_Churn[TotalCharges]": 1940.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7601-DHFWZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 24.0, "Telco_Customer_Churn[TotalCharges]": 1183.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1555-HAPSU", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 23.9, "Telco_Customer_Churn[TotalCharges]": 1663.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4018-PPNDW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 61, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.1, "Telco_Customer_Churn[TotalCharges]": 1551.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5968-HYJRZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 24.55, "Telco_Customer_Churn[TotalCharges]": 1160.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6609-MXJHJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 789.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1240-HCBOH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 26.1, "Telco_Customer_Churn[TotalCharges]": 1759.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4458-KVRBJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.0, "Telco_Customer_Churn[TotalCharges]": 1510.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1092-WPIVQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 18, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 25.1, "Telco_Customer_Churn[TotalCharges]": 428.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3389-KTRXV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 23, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 23.85, "Telco_Customer_Churn[TotalCharges]": 625.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5327-CNLUQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 48, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 96.9, "Telco_Customer_Churn[TotalCharges]": 4473.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0727-BNRLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 97.65, "Telco_Customer_Churn[TotalCharges]": 6743.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5915-ANOEI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 79.15, "Telco_Customer_Churn[TotalCharges]": 5536.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0420-TXVSG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 66.1, "Telco_Customer_Churn[TotalCharges]": 4428.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3486-HOOGQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.7, "Telco_Customer_Churn[TotalCharges]": 5743.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6953-PBDIN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 72.95, "Telco_Customer_Churn[TotalCharges]": 5265.55, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6253-GNHWH", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 71.1, "Telco_Customer_Churn[TotalCharges]": 5224.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1904-WAJAA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 24, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 64.35, "Telco_Customer_Churn[TotalCharges]": 1558.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6900-RBKER", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 52, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 89.45, "Telco_Customer_Churn[TotalCharges]": 4577.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5930-GBIWP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 81.5, "Telco_Customer_Churn[TotalCharges]": 5553.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3902-MIVLE", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 63, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 75.7, "Telco_Customer_Churn[TotalCharges]": 4676.7, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4713-ZBURT", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.7, "Telco_Customer_Churn[TotalCharges]": 4634.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3259-QMXUN", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 58, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 86.1, "Telco_Customer_Churn[TotalCharges]": 4890.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5360-LJCNJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.15, "Telco_Customer_Churn[TotalCharges]": 7555.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5321-NTRKC", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.85, "Telco_Customer_Churn[TotalCharges]": 5234.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6766-HFKLA", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.2, "Telco_Customer_Churn[TotalCharges]": 5744.35, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0266-CLZKZ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.65, "Telco_Customer_Churn[TotalCharges]": 6717.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7037-MTYVW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 38, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 85.4, "Telco_Customer_Churn[TotalCharges]": 3297.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5003-XZWWO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 84.2, "Telco_Customer_Churn[TotalCharges]": 5956.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3612-YUNGG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 64, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 109.2, "Telco_Customer_Churn[TotalCharges]": 6741.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2773-OVBPK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.3, "Telco_Customer_Churn[TotalCharges]": 7567.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7398-HPYZQ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.55, "Telco_Customer_Churn[TotalCharges]": 6404.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7055-JCGNI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 111.95, "Telco_Customer_Churn[TotalCharges]": 7795.95, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7663-CUXZB", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 113.75, "Telco_Customer_Churn[TotalCharges]": 6561.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8690-ZVLCL", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 88.0, "Telco_Customer_Churn[TotalCharges]": 6161.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1741-WTPON", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 115.85, "Telco_Customer_Churn[TotalCharges]": 6567.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6258-PVZWJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "Yes", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 90.8, "Telco_Customer_Churn[TotalCharges]": 6302.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6556-DBKZF", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 71, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 76.05, "Telco_Customer_Churn[TotalCharges]": 5436.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1206-EHBDD", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 56, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.3, "Telco_Customer_Churn[TotalCharges]": 4513.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9128-CPXKI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 59, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 95.8, "Telco_Customer_Churn[TotalCharges]": 5655.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6064-ZATLR", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 27, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 52.85, "Telco_Customer_Churn[TotalCharges]": 1498.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2296-DKZFP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 65, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.0, "Telco_Customer_Churn[TotalCharges]": 4386.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9174-IHETN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 50, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 70.35, "Telco_Customer_Churn[TotalCharges]": 3533.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5130-YPIRV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "No", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 72.0, "Telco_Customer_Churn[TotalCharges]": 4284.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5229-DTFYB", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 41, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 98.8, "Telco_Customer_Churn[TotalCharges]": 3959.15, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0815-MFZGM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 42, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 99.0, "Telco_Customer_Churn[TotalCharges]": 4135.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6568-POCUI", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 45, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 95.2, "Telco_Customer_Churn[TotalCharges]": 4285.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1063-DHQJF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 69, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 92.15, "Telco_Customer_Churn[TotalCharges]": 6480.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5696-CEIQJ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 103.15, "Telco_Customer_Churn[TotalCharges]": 6895.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3186-AJIEK", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 66, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "Fiber optic", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 105.65, "Telco_Customer_Churn[TotalCharges]": 6844.5, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8587-XYZSF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 50.55, "Telco_Customer_Churn[TotalCharges]": 3260.1, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0942-KOWSM", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 30, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.8, "Telco_Customer_Churn[TotalCharges]": 2369.3, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5816-JMLGY", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 80.4, "Telco_Customer_Churn[TotalCharges]": 5717.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7771-CFQRQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 63.8, "Telco_Customer_Churn[TotalCharges]": 3007.25, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0440-EKDCF", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "No", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 60.15, "Telco_Customer_Churn[TotalCharges]": 3753.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9755-JHNMN", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 49, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 67.4, "Telco_Customer_Churn[TotalCharges]": 3306.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "9372-TXXPS", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 60, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 59.85, "Telco_Customer_Churn[TotalCharges]": 3483.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "4994-OBRSZ", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 14, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 76.1, "Telco_Customer_Churn[TotalCharges]": 1054.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3563-SVYLG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 68, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 62.65, "Telco_Customer_Churn[TotalCharges]": 4375.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1221-GHZEP", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 62, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "No", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Mailed check", "Telco_Customer_Churn[MonthlyCharges]": 65.1, "Telco_Customer_Churn[TotalCharges]": 3846.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2999-AANRQ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 21, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "Yes", "Telco_Customer_Churn[DeviceProtection]": "No", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "No", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 71.05, "Telco_Customer_Churn[TotalCharges]": 1524.85, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7560-QJAVJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "DSL", "Telco_Customer_Churn[OnlineSecurity]": "Yes", "Telco_Customer_Churn[OnlineBackup]": "No", "Telco_Customer_Churn[DeviceProtection]": "Yes", "Telco_Customer_Churn[TechSupport]": "Yes", "Telco_Customer_Churn[StreamingTV]": "Yes", "Telco_Customer_Churn[StreamingMovies]": "Yes", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 79.6, "Telco_Customer_Churn[TotalCharges]": 5589.45, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "5310-NOOVA", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Electronic check", "Telco_Customer_Churn[MonthlyCharges]": 19.95, "Telco_Customer_Churn[TotalCharges]": 907.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3170-NMYVV", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 50, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.15, "Telco_Customer_Churn[TotalCharges]": 930.9, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0505-SPOOW", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 1397.65, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6961-MJKBO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 47, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.45, "Telco_Customer_Churn[TotalCharges]": 943.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "8750-QWZAJ", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 70, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.8, "Telco_Customer_Churn[TotalCharges]": 1378.75, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "6828-HMKWP", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 12, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Bank transfer (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 21.05, "Telco_Customer_Churn[TotalCharges]": 262.05, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2626-VEEWG", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 67, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1284.2, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "2030-BTZRO", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 6, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": true, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 107.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "7469-LKBCI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 16, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 18.95, "Telco_Customer_Churn[TotalCharges]": 326.8, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "0040-HALCW", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 54, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 20.4, "Telco_Customer_Churn[TotalCharges]": 1090.6, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "1098-KFQEC", "Telco_Customer_Churn[gender]": "Female", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": true, "Telco_Customer_Churn[Dependents]": true, "Telco_Customer_Churn[tenure]": 55, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.4, "Telco_Customer_Churn[TotalCharges]": 1083.0, "Telco_Customer_Churn[Churn]": false}, {"Telco_Customer_Churn[customerID]": "3764-MNMOI", "Telco_Customer_Churn[gender]": "Male", "Telco_Customer_Churn[SeniorCitizen]": 0, "Telco_Customer_Churn[Partner]": false, "Telco_Customer_Churn[Dependents]": false, "Telco_Customer_Churn[tenure]": 46, "Telco_Customer_Churn[PhoneService]": true, "Telco_Customer_Churn[MultipleLines]": "No", "Telco_Customer_Churn[InternetService]": "No", "Telco_Customer_Churn[OnlineSecurity]": "No internet service", "Telco_Customer_Churn[OnlineBackup]": "No internet service", "Telco_Customer_Churn[DeviceProtection]": "No internet service", "Telco_Customer_Churn[TechSupport]": "No internet service", "Telco_Customer_Churn[StreamingTV]": "No internet service", "Telco_Customer_Churn[StreamingMovies]": "No internet service", "Telco_Customer_Churn[Contract]": "Two year", "Telco_Customer_Churn[PaperlessBilling]": false, "Telco_Customer_Churn[PaymentMethod]": "Credit card (automatic)", "Telco_Customer_Churn[MonthlyCharges]": 19.2, "Telco_Customer_Churn[TotalCharges]": 908.15, "Telco_Customer_Churn[Churn]": false}], "stage_runningstate": "executed"}, {"_id": "64edfd7f5820f11829d9a72b", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1693318524.csv", "in": ["64edfd7f5820f11829d9a72a"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Telco_churn_AutoML", "comment": "", "pipeline_id": "64edfd7f5820f11829d9a726", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Classification", "stage_attributes": {"model_type": "classification", "label": "Telco_Customer_Churn[Churn]", "optimizeBy": "accuracy", "features": ["Telco_Customer_Churn[SeniorCitizen]", "Telco_Customer_Churn[Partner]", "Telco_Customer_Churn[Dependents]", "Telco_Customer_Churn[tenure]", "Telco_Customer_Churn[PhoneService]", "Telco_Customer_Churn[PaperlessBilling]", "Telco_Customer_Churn[MonthlyCharges]", "Telco_Customer_Churn[TotalCharges]", "Telco_Customer_Churn[customerID]_stringindexer", "Telco_Customer_Churn[gender]_stringindexer", "Telco_Customer_Churn[MultipleLines]_stringindexer", "Telco_Customer_Churn[InternetService]_stringindexer", "Telco_Customer_Churn[OnlineSecurity]_stringindexer", "Telco_Customer_Churn[OnlineBackup]_stringindexer", "Telco_Customer_Churn[DeviceProtection]_stringindexer", "Telco_Customer_Churn[TechSupport]_stringindexer", "Telco_Customer_Churn[StreamingTV]_stringindexer", "Telco_Customer_Churn[StreamingMovies]_stringindexer", "Telco_Customer_Churn[Contract]_stringindexer", "Telco_Customer_Churn[PaymentMethod]_stringindexer"], "percentage": "100", "executionTime": "10", "sampling_value": "", "paascall": 1, "run_id": "", "sampling": 0}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/classification.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Classification-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "15431221-f3af-496e-83cd-2ef74ecb4fcc", "original_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]_stringindexer", "alias": "Telco_Customer_Churn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]_stringindexer", "alias": "Telco_Customer_Churn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]_stringindexer", "alias": "Telco_Customer_Churn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]_stringindexer", "alias": "Telco_Customer_Churn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]_stringindexer", "alias": "Telco_Customer_Churn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]_stringindexer", "alias": "Telco_Customer_Churn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]_stringindexer", "alias": "Telco_Customer_Churn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]_stringindexer", "alias": "Telco_Customer_Churn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]_stringindexer", "alias": "Telco_Customer_Churn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]_stringindexer", "alias": "Telco_Customer_Churn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]_stringindexer", "alias": "Telco_Customer_Churn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]_stringindexer", "alias": "Telco_Customer_Churn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "Telco_Customer_Churn[customerID]", "alias": "Telco_Customer_Churn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[gender]", "alias": "Telco_Customer_Churn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[SeniorCitizen]", "alias": "Telco_Customer_Churn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Partner]", "alias": "Telco_Customer_Churn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Dependents]", "alias": "Telco_Customer_Churn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[tenure]", "alias": "Telco_Customer_Churn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PhoneService]", "alias": "Telco_Customer_Churn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MultipleLines]", "alias": "Telco_Customer_Churn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[InternetService]", "alias": "Telco_Customer_Churn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineSecurity]", "alias": "Telco_Customer_Churn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[OnlineBackup]", "alias": "Telco_Customer_Churn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[DeviceProtection]", "alias": "Telco_Customer_Churn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TechSupport]", "alias": "Telco_Customer_Churn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingTV]", "alias": "Telco_Customer_Churn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[StreamingMovies]", "alias": "Telco_Customer_Churn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Contract]", "alias": "Telco_Customer_Churn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaperlessBilling]", "alias": "Telco_Customer_Churn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[PaymentMethod]", "alias": "Telco_Customer_Churn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[MonthlyCharges]", "alias": "Telco_Customer_Churn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[TotalCharges]", "alias": "Telco_Customer_Churn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "Telco_Customer_Churn[Churn]", "alias": "Telco_Customer_Churn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-08-29 14:15:27.192000", "originalcount": 7043, "samplecount": 500, "samplefile": "/FileStore/platform/sampleData/64edfd7f5820f11829d9a729/part-00000-7dd5e575-e4c9-4c28-8c46-8a33aa84d8d3-c000.csv", "joinSchema": [], "updated_at": "2023-08-29 14:15:27.199000", "__v": 0, "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": ""}}]